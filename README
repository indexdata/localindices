- Localindices Suite

-- COMPILING AND BUILDING

To compile and build the source you will Maven2 (http://maven.apache.org), on
debian/ubuntu you can install it via apt:

sudo apt-get install maven2

Having maven installed, type:

mvn install

You can either do it in the top-level ('localindices') dir to build all the submodules or in each submodule dir (e.g 'harvester') - in this case maven will fetch module dependecies from ID maven repo at http://maven.indexdata.com


-- RUNNING HARVESTER AND HARVESTER-ADMIN

--- Harvester Admin

Admin is a simple JavaServer Faces web application and as such runs out-of-the-box on a compliant JEE 5 Application Server (JSF 1.2 is included) e.g. Glassfish V2.1.

Admin will also deploy to Tomcat6 as long as JSF jars are bundled within the *.war file (maven's dependency scope 'compile' instead of 'provided').

Makes sure to deploy the harvester before deploying the admin.

For admin configuration (like he harvester's WS URL) look in the web.xml.

--- Harvester

---- MySQL

Make sure you have mysql installed, configured and running. Then create an empty database and user (using mysql console):

    create database localindices;
    grant all privileges on localindices.* to 'localidxadm'@'localhost' 
                identified by 'localidxadmpass';

---- DataSource

f you deploy on a standalone Glassfish, after setting up MySQL DB you have to add the DS definiton using the 'asadmin' utility.

asadmin add-resources harvester/setup/sun-resources.xml

-- OTHER

--- Masterkey Data Access Layer

This project provides Masterkey specific database and web services connectivity.

The output jar file contains all entity definitions (JavaBeans), abstracted database access objects (DAO) and a generic RESTful WS client.

The RDBMS-based DAO implementation requires javax.persistence (JPA) and javax.transaction (JTA) packages, part of JEE5 specs. Those APIs are implemented as a part of Application Servers so for the time being it is not possible to deploy the harvester to Tomcat/Jetty, this will be fixed by providing third-pary JPA library.
