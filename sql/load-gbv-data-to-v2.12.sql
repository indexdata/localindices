-- MySQL dump 10.16  Distrib 10.1.44-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: localindices
-- ------------------------------------------------------
-- Server version	10.1.44-MariaDB-0+deb9u1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

LOCK TABLES `HARVESTABLE` WRITE;
/*!40000 ALTER TABLE `HARVESTABLE` DISABLE KEYS */;
INSERT INTO `HARVESTABLE` (`ID`, `DTYPE`, `ENABLED`, `LASTUPDATED`, `DESCRIPTION`, `INITIALLYHARVESTED`, `TECHNICALNOTES`, `LASTHARVESTSTARTED`, `SCHEDULESTRING`, `LASTHARVESTFINISHED`, `NAME`, `CURRENTSTATUS`, `CONTACTNOTES`, `AMOUNTHARVESTED`, `SERVICEPROVIDER`, `MESSAGE`, `MAXDBSIZE`, `HARVESTIMMEDIATELY`, `FILETYPEMASKS`, `URIMASKS`, `STARTURLS`, `RECURSIONDEPTH`, `EXPECTEDSCHEMA`, `URL`, `NORMALIZATIONFILTER`, `SCHEMAURI`, `OAISETNAME`, `FROMDATE`, `UNTILDATE`, `METADATAPREFIX`, `DATEFORMAT`, `RESUMPTIONTOKEN`, `STORAGE_ID`, `TRANSFORMATION_ID`, `OVERWRITE`, `SPLITAT`, `SPLITSIZE`, `OUTPUTSCHEMA`, `ENCODING`, `CLIENTCLASS`, `USERNAME`, `PASSWORD`, `PROXY`, `SCRIPT`, `ISPERSISTENCE`, `INITDATA`, `SLEEP`, `CONNECTORURL`, `ALLOWERRORS`, `ALLOWCONDREQ`, `CLEARRTONERROR`, `KEEPPARTIAL`, `TIMEOUT`, `RETRYCOUNT`, `RETRYWAIT`, `LOGLEVEL`, `MAILLEVEL`, `MAILADDRESS`, `RECORDLIMIT`, `DISKRUN`, `CACHEENABLED`, `ENGINEPARAMETERS`, `CONNECTORENGINEURLSETTING_ID`, `CONNECTORREPOURLSETTING_ID`, `OPENACCESS`, `ORIGINALURI`, `JSON`, `LAXPARSING`, `PASSIVEMODE`, `RECURSIONLEVELS`, `CSVCONFIGURATION`, `EXCLUDEFILEPATTERN`, `INCLUDEFILEPATTERN`, `STORAGEBATCHLIMIT`, `MANAGEDBY`, `USEDBY`, `CONSTANTFIELDS`, `STOREORIGINAL`, `ACL`) VALUES (10008,'XmlBulkResource',0,'2020-03-13 18:19:32','','2020-03-13 18:17:36','','2020-03-13 18:19:33','0 0 * * *','2020-03-13 18:19:37','GBV (0046)','OK','',0,'','',NULL,0,NULL,NULL,NULL,NULL,'','http://dispatcher.indexdata.com/gbv/0046/',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,10001,10004,0,'1','100','',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,1,300,2,60,'DEBUG','WARN','',NULL,0,0,NULL,NULL,NULL,0,NULL,'{\r\n \"folioAuthPath\": \"bl-users/login\",\r\n \"folioTenant\": \"diku\",\r\n \"folioUsername\": \"diku_admin\",\r\n \"folioPassword\": \"admin\",\r\n \"instanceStoragePath\": \"instance-storage/instances\",\r\n \"holdingsStoragePath\": \"holdings-storage/holdings\",\r\n \"itemStoragePath\": \"item-storage/items\"\r\n}',0,0,0,'','','xml',NULL,'','','',0,'');
/*!40000 ALTER TABLE `HARVESTABLE` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `STEP` WRITE;
/*!40000 ALTER TABLE `STEP` DISABLE KEYS */;
INSERT INTO `STEP` (`ID`, `DTYPE`, `DESCRIPTION`, `ENABLED`, `NAME`, `SCRIPT`, `TYPE`, `OUTPUTFORMAT`, `INPUTFORMAT`, `CUSTOMCLASS`, `TESTDATA`, `TESTOUTPUT`, `ACL`) VALUES (10002,'XmlTransformationStep','',NULL,'codes2uuid','<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <!-- Map instance statues -->\r\n  <xsl:template match=\"statusId\">\r\n    <statusId>\r\n    <xsl:choose>\r\n      <xsl:when test=\".=\'Cataloged\'\">9634a5ab-9228-4703-baf2-4d12ebc77d56</xsl:when>\r\n      <xsl:when test=\".=\'Uncataloged\'\">26f5208e-110a-4394-be29-1569a8c84a65</xsl:when>\r\n      <xsl:when test=\".=\'Autopsie\'\">bac08adf-98ef-44ee-8e8a-ab76128c92c1</xsl:when>\r\n      <xsl:when test=\".=\'Bibliografisch vollständig\'\">24d7c039-b538-46ee-9b44-6348df2ef7bf</xsl:when>\r\n      <xsl:when test=\".=\'Erwerbungsdatensatz\'\">618c0e26-029e-42ed-85fa-5ffa1dab1e78</xsl:when>\r\n      <xsl:when test=\".=\'Datensatz für internen Gebrauch\'\">aa59e2e1-379c-4772-93fc-0623df183cfb</xsl:when>\r\n      <xsl:when test=\".=\'Lösch-Status\'\">9b15b1f3-bb91-40ba-8053-35dd3bd2aa7b</xsl:when>\r\n      <xsl:when test=\".=\'Maschinell konvertierte Daten\'\">e199770c-943c-4a89-9c5b-ad2187e8fa3e</xsl:when>\r\n      <xsl:when test=\".=\'Katalogisat ohne Autopsie\'\">cecd7663-ce5c-451b-8e7f-f3fac797c465</xsl:when>\r\n      <xsl:when test=\".=\'Verwaltungsdatensatz\'\">e9683fa7-88a7-4956-8631-dedb1252b059</xsl:when>\r\n      <xsl:when test=\".=\'Fremddatensatz\'\">f8d54dae-77d9-4363-8063-f504b1cd094e</xsl:when>\r\n      <xsl:when test=\".=\'Katalogisat nach Autopsie im Vorläufigkeitsstatus\'\">12383c8c-a99d-4257-8864-647b1c2fdb17</xsl:when>\r\n      <xsl:when test=\".=\'Maschinelle Einspielung, möglicherweise dublett\'\">1d37e542-276a-4dbd-ac4d-f58534cdbc6e</xsl:when>\r\n      <xsl:when test=\".=\'Zunächst verdeckt eingespieltes Novum\'\">e7b3092b-ffb2-44a0-906e-e55a01a518af</xsl:when>\r\n      <xsl:when test=\".=\'Inhalt oder Struktur ist zu überprüfen\'\">03b669ae-07b9-4421-965c-bbda50d39065</xsl:when>\r\n    </xsl:choose>\r\n    </statusId>\r\n  </xsl:template>\r\n\r\n  <!-- Map identifier types -->\r\n  <xsl:template match=\"identifiers/arr/i/identifierTypeId\">\r\n    <identifierTypeId>\r\n      <xsl:choose>\r\n        <xsl:when test=\".=\'ASIN\'\">7f907515-a1bf-4513-8a38-92e1a07c539d</xsl:when>\r\n        <xsl:when test=\".=\'BNB\'\">3187432f-9434-40a8-8782-35a111a1491e</xsl:when>\r\n        <xsl:when test=\".=\'Cancelled GPO item number\'\">5069054d-bc3a-4212-a4e8-e2013a02386f</xsl:when>\r\n        <xsl:when test=\".=\'CODEN\'\">593b78cb-32f3-44d1-ba8c-63fd5e6989e6</xsl:when>\r\n        <xsl:when test=\".=\'Control number\'\">5d164f4b-0b15-4e42-ae75-cfcf85318ad9</xsl:when>\r\n        <xsl:when test=\".=\'DOI\'\">39554f54-d0bb-4f0a-89a4-e422f6136316</xsl:when>\r\n        <xsl:when test=\".=\'GPO item number\'\">351ebc1c-3aae-4825-8765-c6d50dbf011f</xsl:when>\r\n        <xsl:when test=\".=\'Handle\'\">216b156b-215e-4839-a53e-ade35cb5702a</xsl:when>\r\n        <xsl:when test=\".=\'Invalid ISBN\'\">fcca2643-406a-482a-b760-7a7f8aec640e</xsl:when>\r\n        <xsl:when test=\".=\'Invalid ISSN\'\">27fd35a6-b8f6-41f2-aa0e-9c663ceb250c</xsl:when>\r\n        <xsl:when test=\".=\'ISBN\'\">8261054f-be78-422d-bd51-4ed9f33c3422</xsl:when>\r\n        <xsl:when test=\".=\'ISSN\'\">913300b2-03ed-469a-8179-c1092c991227</xsl:when>\r\n        <xsl:when test=\".=\'LCCN\'\">c858e4f2-2b6b-4385-842b-60732ee14abb</xsl:when>\r\n        <xsl:when test=\".=\'Linking ISSN\'\">5860f255-a27f-4916-a830-262aa900a6b9</xsl:when>\r\n        <xsl:when test=\".=\'Local identifier\'\">5130aed5-1095-4fb6-8f6f-caa3d6cc7aae</xsl:when>\r\n        <xsl:when test=\".=\'OCLC\'\">439bfbae-75bc-4f74-9fc7-b2a2d47ce3ef</xsl:when>\r\n        <xsl:when test=\".=\'Other standard identifier\'\">2e8b3b6c-0e7d-4e48-bca2-b0b23b376af5</xsl:when>\r\n        <xsl:when test=\".=\'Publisher or distributor number\'\">b5d8cdc4-9441-487c-90cf-0c7ec97728eb</xsl:when>\r\n        <xsl:when test=\".=\'Report number\'\">37b65e79-0392-450d-adc6-e2a1f47de452</xsl:when>\r\n        <xsl:when test=\".=\'Standard technical report number\'\">8e3dd25e-db82-4b06-8311-90d41998c109</xsl:when>\r\n        <xsl:when test=\".=\'StEdNL\'\">3fbacad6-0240-4823-bce8-bb122cfdf229</xsl:when>\r\n        <xsl:when test=\".=\'System control number\'\">7e591197-f335-4afb-bc6d-a6d76ca3bace</xsl:when>\r\n        <xsl:when test=\".=\'UkMac\'\">650ef996-35e3-48ec-bf3a-a0d078a0ca37</xsl:when>\r\n        <xsl:when test=\".=\'URN\'\">eb7b2717-f149-4fec-81a3-deefb8f5ee6b</xsl:when>\r\n        <xsl:when test=\".=\'ISBN der parallelen Ausgabe auf einem anderen Datenträger\'\">59310652-2e67-11ea-96ad-e0750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISBN der parallelen Ausgabe im Fernzugriff\'\">64db7c80-2e67-11ea-adb5-e1750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISBN der parallelen Druckausgabe\'\">6fa772ea-2e67-11ea-83ab-e2750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISBN für parallele Ausgabe in einer anderen physischen Form\'\">88b4811a-2e67-11ea-aa7a-e3750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISBN einer Manifestation in anderer physischer Form\'\">8fc26bf2-2e67-11ea-b105-e4750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'Autorisierte ISSN\'\">a522ff7a-2e67-11ea-82dd-e5750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISBN der Reproduktion\'\">b2099758-2e67-11ea-a035-e7750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'Formal falsche ISBN der Reproduktion\'\">d0e21e7a-2e67-11ea-b0ca-ea750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'Formal falsche ISBN\'\">e28b9868-2e67-11ea-ab14-ee750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISSN für parallele Ausgaben auf einem anderen Datenträger\'\">04ff90b6-2e68-11ea-8966-f1750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISSN für parallele Ausgaben im Fernzugriff\'\">134476f0-2e68-11ea-93d9-f2750fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISSN für parallele Druckausgaben\'\">3339cc1c-2e68-11ea-94cb-03760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'fehlerhafte ISSN der parallelen Ausgabe\'\">452edef8-2e68-11ea-a929-05760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'Formal falsche ISSN\'\">5fa4a1be-2e68-11ea-815e-06760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISMN\'\">717e2784-2e68-11ea-b559-07760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ISRN\'\">780d0642-2e68-11ea-8bd2-08760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'Formal falsche ISMN\'\">842cb936-2e68-11ea-96b1-09760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'DOI im Druckwerk\'\">dd883352-2e68-11ea-962a-1e760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'DNB-Nummer\'\">1f0128de-2e69-11ea-a408-32760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'SWB-OCLC-Nummer\'\">364ca91e-2e69-11ea-982b-3c760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'CIP-Nummer\'\">50359aa2-2e69-11ea-b7c3-47760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'WV-Nummer\'\">7321bd20-2e69-11ea-a5e8-53760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ZDB-ID\'\">8b420630-2e69-11ea-85b5-5c760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'SWB-PPN des umgelenkten Satzes\'\">992002ca-2e69-11ea-92de-5d760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'BSZ\'\">88977b94-2e6a-11ea-94c3-b0760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'BVB\'\">95ef91fa-2e6a-11ea-adba-b2760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'DNB\'\">99d339fc-2e6a-11ea-a355-b3760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'FIV\'\">9edacd20-2e6a-11ea-bfda-b4760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'GBV\'\">a302f40e-2e6a-11ea-be8d-b7760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'HEB\'\">a70582ec-2e6a-11ea-90a0-b8760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'HBZ\'\">b15fd24c-2e6a-11ea-bc2e-b9760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'IKAR\'\">ba8201ce-2e6a-11ea-9783-ba760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'KBV\'\">be0c4192-2e6a-11ea-be74-bb760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'OBV\'\">c2680a00-2e6a-11ea-91b6-bc760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'VD16\'\">c840cb38-2e6a-11ea-a707-bd760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'VD17\'\">cd307378-2e6a-11ea-82d9-be760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ZBM\'\">d749889a-2e6a-11ea-a859-bf760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'ZDB\'\">df0a28be-2e6a-11ea-9902-c0760fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'PPN SWB\'\">6048004e-2e71-11ea-8ddd-5a780fe0d4e4</xsl:when>\r\n        <xsl:when test=\".=\'Identnummer der erstkatalogisierenden Institution\'\">e133d384-332d-11ea-a8a4-ff796e46a18d</xsl:when>\r\n        <xsl:otherwise>2e8b3b6c-0e7d-4e48-bca2-b0b23b376af5</xsl:otherwise>\r\n      </xsl:choose>\r\n    </identifierTypeId>\r\n  </xsl:template>\r\n\r\n  <!-- Map location code to a FOLIO location UUID -->\r\n  <xsl:template match=\"holdingsRecords/arr/i/permanentLocation\">\r\n    <permanentLocationId>\r\n      <xsl:choose>\r\n        <xsl:when test=\".=\'EAST\'\">81582666-305d-4c8e-82cc-061fd00e9c42</xsl:when>\r\n        <xsl:when test=\".=\'WEST\'\">d05b8941-a7b3-4519-b450-06d72ca13a0c</xsl:when>\r\n        <xsl:otherwise>c8f57ff4-366f-4c94-8186-d6439fae1d22</xsl:otherwise>  <!-- Unspecified location -->\r\n      </xsl:choose>\r\n    </permanentLocationId>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,'xml','',NULL,'','','');
INSERT INTO `STEP` (`ID`, `DTYPE`, `DESCRIPTION`, `ENABLED`, `NAME`, `SCRIPT`, `TYPE`, `OUTPUTFORMAT`, `INPUTFORMAT`, `CUSTOMCLASS`, `TESTDATA`, `TESTOUTPUT`, `ACL`) VALUES (10003,'XmlTransformationStep','',NULL,'pica2instance','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet\r\n    version=\"1.0\"\r\n    xmlns:marc=\"deleteMe\"\r\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n\r\n  <xsl:import href=\"map-relator-to-contributor-type.xsl\"/>\r\n\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\r\n\r\n  <xsl:template match=\"collection\">\r\n    <collection>\r\n      <xsl:apply-templates />\r\n    </collection>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"record\">\r\n    <record>\r\n      <xsl:apply-templates />\r\n    </record>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"section[@type=\'title\']/fields\">\r\n    <source>FOLIO</source>\r\n    <hrid>\r\n      <xsl:value-of select=\"datafield[@tag=\'003@\']/subfield[@code=\'0\']\" />\r\n    </hrid>\r\n\r\n    <xsl:for-each select=\"datafield[@tag=\'001A\']/subfield[@code=\'0\']\">\r\n      <catalogedDate>\r\n        <xsl:call-template name=\"pica-to-iso-date\">\r\n          <xsl:with-param name=\"input\" select=\".\" />\r\n        </xsl:call-template>\r\n      </catalogedDate>\r\n    </xsl:for-each>\r\n<!--\r\n    <xsl:if test=\"datafield[@tag=\'001B\']\">\r\n      <metadata>\r\n        <xsl:for-each select=\"datafield[@tag=\'001B\']\">\r\n          <updatedDate>\r\n            <xsl:call-template name=\"pica-to-iso-date\">\r\n              <xsl:with-param name=\"input\" select=\"subfield[@code=\'0\']\" />\r\n              <xsl:with-param name=\"suffix\" select=\"concat(\'T\', subfield[@code=\'t\'], \'Z\')\" />\r\n            </xsl:call-template>\r\n          </updatedDate>\r\n        </xsl:for-each>\r\n      </metadata>\r\n    </xsl:if>\r\n-->\r\n    <xsl:for-each select=\"datafield[@tag=\'001D\']/subfield[@code=\'0\'][not(contains(.,\'99-99\'))]\">\r\n      <statusUpdatedDate>\r\n        <xsl:call-template name=\"pica-to-iso-date\">\r\n          <xsl:with-param name=\"input\" select=\".\" />\r\n        </xsl:call-template>\r\n      </statusUpdatedDate>\r\n    </xsl:for-each>\r\n\r\n      <!-- There are more 1540 statistical codes in the spreadsheet for tag 002@. I\'m not quite sure what to do about this -->\r\n      <!-- <statisticalCodeIds>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'016B\' or @tag=\'009N\']\"> \r\n            <i>\r\n              <xsl:choose>\r\n                <xsl:when test=\"subfield[@code=\'\']=\'Aau\'\">UUID of Aau</xsl:when>\r\n                <xsl:when test=\"subfield[@code=\'\']=\'Aau\'\">UUID of Aau</xsl:when>\r\n                <xsl:otherwise>b5968c9e-cddc-4576-99e3-8e60aed8b0dd</xsl:otherwise>\r\n              </xsl:choose>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </statisticalCodeIds> -->\r\n\r\n    <xsl:if test=\"datafield[@tag=\'002@\']\">\r\n      <!-- statusId -->\r\n      <statusId>\r\n        <xsl:variable name=\"stcode\" select=\"substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 3, 1)\" /> \r\n        <xsl:choose>\r\n          <xsl:when test=\"$stcode=\'u\'\">Autopsie</xsl:when>\r\n          <xsl:when test=\"$stcode=\'v\'\">Bibliografisch vollständig</xsl:when>\r\n          <xsl:when test=\"$stcode=\'a\'\">Erwerbungsdatensatz</xsl:when>\r\n          <xsl:when test=\"$stcode=\'i\'\">Datensatz für internen Gebrauch</xsl:when>\r\n          <xsl:when test=\"$stcode=\'k\'\">Lösch-Status</xsl:when>\r\n          <xsl:when test=\"$stcode=\'n\'\">Maschinell konvertierte Daten</xsl:when>\r\n          <xsl:when test=\"$stcode=\'r\'\">Katalogisat ohne Autopsie</xsl:when>\r\n          <xsl:when test=\"$stcode=\'t\'\">Verwaltungsdatensatz</xsl:when>\r\n          <xsl:when test=\"$stcode=\'x\'\">Fremddatensatz</xsl:when>\r\n          <xsl:when test=\"$stcode=\'y\'\">Katalogisat nach Autopsie im Vorläufigkeitsstatus</xsl:when>\r\n          <xsl:when test=\"$stcode=\'B\'\">Maschinelle Einspielung, möglicherweise dublett</xsl:when>\r\n          <xsl:when test=\"$stcode=\'N\'\">Zunächst verdeckt eingespieltes Novum</xsl:when>\r\n          <xsl:when test=\"$stcode=\'X\'\">Inhalt oder Struktur ist zu überprüfen</xsl:when>\r\n        </xsl:choose>\r\n      </statusId>\r\n      <modeOfIssuanceId>\r\n        <xsl:variable name=\"mii\" select=\"substring(datafield[@tag=\'002@\']/subfield[@code=\'0\'], 2, 1)\" />\r\n        <xsl:variable name=\"noc\" select=\"datafield[@tag=\'013D\']/subfield[@code=\'9\']\" />\r\n        <xsl:choose>\r\n          <xsl:when test=\"($noc=\'106354256\' or $noc=\'32609296X\' or $noc=\'344907406\' or $noc=\'153776951\') and ($mii=\'a\' or $mii=\'f\' or $mii=\'F\' or $mii=\'s\' or $mii=\'v\')\">Integrierende Ressource</xsl:when>\r\n          <xsl:when test=\"$mii=\'c\'\">f5cc2ab6-bb92-4cab-b83f-5a3d09261a41</xsl:when>\r\n          <xsl:when test=\"$mii=\'b\' or $mii=\'d\'\">068b5344-e2a6-40df-9186-1829e13cd344</xsl:when>\r\n          <xsl:when test=\"$mii=\'z\'\">612bbd3d-c16b-4bfb-8517-2afafc60204a</xsl:when>\r\n          <xsl:otherwise>9d18a02f-5897-4c31-9106-c9abb5c7ae8b</xsl:otherwise>\r\n        </xsl:choose>\r\n      </modeOfIssuanceId>\r\n    </xsl:if>\r\n\r\n    <!-- Instance type ID (resource type) -->\r\n    <instanceTypeId>\r\n      <!-- UUIDs for resource types -->\r\n      <xsl:variable name=\"ctype\" select=\"datafield[@tag=\'002C\'][1]/subfield[@code=\'b\']\" />\r\n      <xsl:choose>\r\n        <xsl:when test=\"$ctype=\'crd\'\">3363cdb1-e644-446c-82a4-dc3a1d4395b9</xsl:when> <!-- cartographic dataset -->\r\n        <xsl:when test=\"$ctype=\'cri\'\">526aa04d-9289-4511-8866-349299592c18</xsl:when> <!-- cartographic image -->\r\n        <xsl:when test=\"$ctype=\'crm\'\">80c0c134-0240-4b63-99d0-6ca755d5f433</xsl:when> <!-- cartographic moving image -->\r\n        <xsl:when test=\"$ctype=\'crt\'\">408f82f0-e612-4977-96a1-02076229e312</xsl:when> <!-- cartographic tactile image -->\r\n        <xsl:when test=\"$ctype=\'crn\'\">e5136fa2-1f19-4581-b005-6e007a940ca8</xsl:when> <!-- cartographic tactile three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'crf\'\">2022aa2e-bdde-4dc4-90bc-115e8894b8b3</xsl:when> <!-- cartographic three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'cod\'\">df5dddff-9c30-4507-8b82-119ff972d4d7</xsl:when> <!-- computer dataset -->\r\n        <xsl:when test=\"$ctype=\'cop\'\">c208544b-9e28-44fa-a13c-f4093d72f798</xsl:when> <!-- computer program -->\r\n        <xsl:when test=\"$ctype=\'ntv\'\">fbe264b5-69aa-4b7c-a230-3b53337f6440</xsl:when> <!-- notated movement -->\r\n        <xsl:when test=\"$ctype=\'ntm\'\">497b5090-3da2-486c-b57f-de5bb3c2e26d</xsl:when> <!-- notated music -->\r\n        <xsl:when test=\"$ctype=\'prm\'\">3be24c14-3551-4180-9292-26a786649c8b</xsl:when> <!-- performed music -->\r\n        <xsl:when test=\"$ctype=\'snd\'\">9bce18bd-45bf-4949-8fa8-63163e4b7d7f</xsl:when> <!-- sounds -->\r\n        <xsl:when test=\"$ctype=\'spw\'\">c7f7446f-4642-4d97-88c9-55bae2ad6c7f</xsl:when> <!-- spoken word -->\r\n        <xsl:when test=\"$ctype=\'sti\'\">535e3160-763a-42f9-b0c0-d8ed7df6e2a2</xsl:when> <!-- still image -->\r\n        <xsl:when test=\"$ctype=\'tci\'\">efe2e89b-0525-4535-aa9b-3ff1a131189e</xsl:when> <!-- tactile image -->\r\n        <xsl:when test=\"$ctype=\'tcn\'\">e6a278fb-565a-4296-a7c5-8eb63d259522</xsl:when> <!-- tactile notated movement -->\r\n        <xsl:when test=\"$ctype=\'tcm\'\">a67e00fd-dcce-42a9-9e75-fd654ec31e89</xsl:when> <!-- tactile notated music -->\r\n        <xsl:when test=\"$ctype=\'tct\'\">8105bd44-e7bd-487e-a8f2-b804a361d92f</xsl:when> <!-- tactile text -->\r\n        <xsl:when test=\"$ctype=\'tcf\'\">82689e16-629d-47f7-94b5-d89736cf11f2</xsl:when> <!-- tactile three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'txt\'\">6312d172-f0cf-40f6-b27d-9fa8feaf332f</xsl:when> <!-- text -->\r\n        <xsl:when test=\"$ctype=\'tdf\'\">c1e95c2b-4efc-48cf-9e71-edb622cf0c22</xsl:when> <!-- three-dimensional form -->\r\n        <xsl:when test=\"$ctype=\'tdm\'\">3e3039b7-fda0-4ac4-885a-022d457cb99c</xsl:when> <!-- three-dimensional moving image -->\r\n        <xsl:when test=\"$ctype=\'tdi\'\">225faa14-f9bf-4ecd-990d-69433c912434</xsl:when> <!-- two-dimensional moving image -->\r\n        <xsl:when test=\"$ctype=\'zzz\'\">30fffe0e-e985-4144-b2e2-1e8179bdb41f</xsl:when> <!-- unspecified -->\r\n        <xsl:otherwise>a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:otherwise>  <!--  : other -->\r\n      </xsl:choose>\r\n    </instanceTypeId>\r\n\r\n    <!-- Formats -->\r\n    <instanceFormatIds>\r\n      <arr>\r\n        <xsl:for-each select=\"datafield[@tag=\'002E\']\">\r\n          <i>\r\n          <xsl:choose>\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'sg\'\">5642320a-2ab9-475c-8ca2-4af7551cf296</xsl:when> <!-- audio : audio cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ss\'\">6d749f00-97bd-4eab-9828-57167558f514</xsl:when> <!-- audio : audiocassette -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'se\'\">485e3e1d-9f46-42b6-8c65-6bb7bd4b37f8</xsl:when> <!-- audio : audio cylinder -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'sd\'\">5cb91d15-96b1-4b8a-bf60-ec310538da66</xsl:when> <!-- audio : audio disc -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'sq\'\">7fde4e21-00b5-4de4-a90a-08a84a601aeb</xsl:when> <!-- audio : audio roll -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'st\'\">7612aa96-61a6-41bd-8ed2-ff1688e794e1</xsl:when> <!-- audio : audiotape reel -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'sw\'\">6a679992-b37e-4b57-b6ea-96be6b51d2b4</xsl:when> <!-- audio : audio wire reel -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'sz\'\">a3549b8c-3282-4a14-9ec3-c1cf294043b9</xsl:when> <!-- audio : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'si\'\">5bfb7b4f-9cd5-4577-a364-f95352146a56</xsl:when> <!-- audio : sound track reel -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ck\'\">549e3381-7d49-44f6-8232-37af1cb5ecf3</xsl:when> <!-- computer : computer card -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'cb\'\">88f58dc0-4243-4c6b-8321-70244ff34a83</xsl:when> <!-- computer : computer chip cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'cd\'\">ac9de2b9-0914-4a54-8805-463686a5489e</xsl:when> <!-- computer : computer disc -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ce\'\">e05f2613-05df-4b4d-9292-2ee9aa778ecc</xsl:when> <!-- computer : computer disc cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ca\'\">f4f30334-568b-4dd2-88b5-db8401607daf</xsl:when> <!-- computer : computer tape cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'cf\'\">e5aeb29a-cf0a-4d97-8c39-7756c10d423c</xsl:when> <!-- computer : computer tape cassette -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ch\'\">d16b19d1-507f-4a22-bb8a-b3f713a73221</xsl:when> <!-- computer : computer tape reel -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'cr\'\">f5e8210f-7640-459b-a71f-552567f92369</xsl:when> <!-- computer : online resource -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'cz\'\">fe1b9adb-e0cf-4e05-905f-ce9986279404</xsl:when> <!-- computer : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ha\'\">cb3004a3-2a85-4ed4-8084-409f93d6d8ba</xsl:when> <!-- microform : aperture card -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'he\'\">fc3e32a0-9c85-4454-a42e-39fca788a7dc</xsl:when> <!-- microform : microfiche -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hf\'\">b72e66e2-d946-4b01-a696-8fab07051ff8</xsl:when> <!-- microform : microfiche cassette -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hb\'\">fc9bfed9-2cb0-465f-8758-33af5bba750b</xsl:when> <!-- microform : microfilm cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hc\'\">b71e5ec6-a15d-4261-baf9-aea6be7af15b</xsl:when> <!-- microform : microfilm cassette -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hd\'\">7bfe7e83-d4aa-46d1-b2a9-f612b18d11f4</xsl:when> <!-- microform : microfilm reel -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hj\'\">cb96199a-21fb-4f11-b003-99291d8c9752</xsl:when> <!-- microform : microfilm roll -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hh\'\">33009ba2-b742-4aab-b592-68b27451e94f</xsl:when> <!-- microform : microfilm slip -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hg\'\">788aa9a6-5f0b-4c52-957b-998266ee3bd3</xsl:when> <!-- microform : microopaque -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'hz\'\">a0f2612b-f24f-4dc8-a139-89c3da5a38f1</xsl:when> <!-- microform : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'pp\'\">b1c69d78-4afb-4d8b-9624-8b3cfa5288ad</xsl:when> <!-- microscopic : microscope slide -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'pz\'\">55d3b8aa-304e-4967-8b78-55926d7809ac</xsl:when> <!-- microscopic : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'mc\'\">6bf2154b-df6e-4f11-97d0-6541231ac2be</xsl:when> <!-- projected image : film cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'mf\'\">47b226c0-853c-40f4-ba2e-2bd5ba82b665</xsl:when> <!-- projected image : film cassette -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'mr\'\">55a66581-3921-4b50-9981-4fe53bf35e7f</xsl:when> <!-- projected image : film reel -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'mo\'\">f0e689e8-e62d-4aac-b1c1-198ac9114aca</xsl:when> <!-- projected image : film roll -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'gd\'\">53f44ae4-167b-4cc2-9a63-4375c0ad9f58</xsl:when> <!-- projected image : filmslip -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'gf\'\">8e04d356-2645-4f97-8de8-9721cf11ccef</xsl:when> <!-- projected image : filmstrip -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'gc\'\">f7107ab3-9c09-4bcb-a637-368f39e0b140</xsl:when> <!-- projected image : filmstrip cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'mz\'\">9166e7c9-7edb-4180-b57e-e495f551297f</xsl:when> <!-- projected image : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'gt\'\">eb860cea-b842-4a8b-ab8d-0739856f0c2c</xsl:when> <!-- projected image : overhead transparency -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'gs\'\">b2b39d2f-856b-4419-93d3-ed1851f91b9f</xsl:when> <!-- projected image : slide -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'ez\'\">7c9b361d-66b6-4e4c-ae4b-2c01f655612c</xsl:when> <!-- stereographic : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'eh\'\">e62f4860-b3b0-462e-92b6-e032336ab663</xsl:when> <!-- stereographic : stereograph card -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'es\'\">c3f41d5e-e192-4828-805c-6df3270c1910</xsl:when> <!-- stereographic : stereograph disc -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'no\'\">5fa3e09f-2192-41a9-b4bf-9eb8aef0af0a</xsl:when> <!-- unmediated : card -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'nn\'\">affd5809-2897-42ca-b958-b311f3e0dcfb</xsl:when> <!-- unmediated : flipchart -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'nr\'\">926662e9-2486-4bb9-ba3b-59bd2e7f2a0c</xsl:when> <!-- unmediated : object -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'nz\'\">2802b285-9f27-4c86-a9d7-d2ac08b26a79</xsl:when> <!-- unmediated : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'na\'\">68e7e339-f35c-4be2-b161-0b94d7569b7b</xsl:when> <!-- unmediated : roll -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'nb\'\">5913bb96-e881-4087-9e71-33a43f68e12e</xsl:when> <!-- unmediated : sheet -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'nc\'\">8d511d33-5e85-4c5d-9bce-6e3c9cd0c324</xsl:when> <!-- unmediated : volume -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'zu\'\">98f0caa9-d38e-427b-9ec4-454de81a94d7</xsl:when> <!-- unspecified : unspecified -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'vz\'\">e3179f91-3032-43ee-be97-f0464f359d9c</xsl:when> <!-- video : other -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'vc\'\">132d70db-53b3-4999-bd79-0fac3b8b9b98</xsl:when> <!-- video : video cartridge -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'vf\'\">431cc9a0-4572-4613-b267-befb0f3d457f</xsl:when> <!-- video : videocassette -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'vd\'\">7f857834-b2e2-48b1-8528-6a1fe89bf979</xsl:when> <!-- video : videodisc -->\r\n            <xsl:when test=\"./subfield[@code=\'b\']=\'vr\'\">ba0d7429-7ccf-419d-8bfb-e6a1200a8d20</xsl:when> <!-- video : videotape reel -->\r\n          </xsl:choose>\r\n        </i>\r\n        </xsl:for-each>\r\n      </arr>\r\n    </instanceFormatIds>\r\n\r\n    <!-- Identifiers -->\r\n    <identifiers>\r\n      <arr>\r\n      <xsl:for-each select=\"datafield[@tag=\'003S\' or @tag=\'004A\' or @tag=\'004P\' or @tag=\'004J\' or @tag=\'004K\' or @tag=\'004D\' \r\n      or @tag=\'005A\' or @tag=\'005I\' or @tag=\'005P\' or @tag=\'005D\' or @tag=\'004F\' or @tag=\'004M\' or @tag=\'004I\' or @tag=\'006A\'\r\n      or @tag=\'006B\' or @tag=\'006G\' or @tag=\'006T\' or @tag=\'006U\' or @tag=\'006Z\' or @tag=\'006S\' or @tag=\'006L\' or @tag=\'006\'\r\n      or @tag=\'006V\' or @tag=\'006W\' or @tag=\'006M\' or @tag=\'004V\' or @tag=\'004R\' or @tag=\'004W\' or @tag=\'004L\' or @tag=\'004C\'\r\n      or @tag=\'004U\' or @tag=\'003O\' or @tag=\'003T\' or @tag=\'003D\' or @tag=\'007C\' or @tag=\'007D\' or @tag=\'007G\']\">\r\n        <i>\r\n          <xsl:choose>\r\n            <xsl:when test=\"current()[@tag=\'004A\' or @tag=\'004P\' or @tag=\'005A\' or @tag=\'005P\' or @tag=\'005D\' or @tag=\'004F\' or @tag=\'004M\' or @tag=\'004I\']\">\r\n              <value>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'f\'] and ./subfield[@code=\'0\']\">\r\n                    <xsl:value-of select=\"concat(./subfield[@code=\'0\'],\' \',./subfield[@code=\'f\'])\"/>\r\n                  </xsl:when>\r\n                  <xsl:when test=\"./subfield[@code=\'f\']\">\r\n                    <xsl:value-of select=\"./subfield[@code=\'f\']\"/>\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'0\']\"/> \r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </value>\r\n              <identifierTypeId>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"current()/@tag=\'004A\'\">ISBN</xsl:when> <!-- ISBN -->\r\n                  <xsl:when test=\"current()/@tag=\'004P\' and ./subfield[@code=\'S\']=\'a\'\">ISBN der parallelen Ausgabe auf einem anderen Datenträger</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004P\' and ./subfield[@code=\'S\']=\'o\'\">ISBN der parallelen Ausgabe im Fernzugriff</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004P\' and ./subfield[@code=\'S\']=\'p\'\">ISBN der parallelen Druckausgabe</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004P\' and ./subfield[@code=\'S\']=\'u\'\">ISBN für parallele Ausgabe in einer anderen physischen Form</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004P\'\">ISBN einer Manifestation in anderer physischer Form</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'005A\'\">ISSN</xsl:when> <!-- ISSN -->\r\n                  <xsl:when test=\"current()/@tag=\'005D\'\">Formal falsche ISSN</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'005P\' and ./subfield[@code=\'S\']=\'a\'\">ISSN für parallele Ausgaben auf einem anderen Datenträger</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'005P\' and ./subfield[@code=\'S\']=\'o\'\">ISSN für parallele Ausgaben im Fernzugriff</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'005P\' and ./subfield[@code=\'S\']=\'p\'\">ISSN für parallele Druckausgaben</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'005P\' and ./subfield[@code=\'S\']=\'f\'\">fehlerhafte ISSN der parallelen Ausgabe</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'005P\'\">ISSN of parallel editions</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004F\'\">ISMN</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004M\'\">ISRN</xsl:when>\r\n                  <xsl:when test=\"current()/@tag=\'004I\'\">Formal falsche ISMN</xsl:when>\r\n                </xsl:choose>\r\n              </identifierTypeId>\r\n            </xsl:when>\r\n            <xsl:when test=\"current()[@tag=\'007G\' or @tag=\'007D\']\">\r\n              <value>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'0\']\">\r\n                    <xsl:value-of select=\"concat(./subfield[@code=\'i\'],\':_\',./subfield[@code=\'0\'])\" />\r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'i\']\" />\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </value>\r\n              <identifierTypeId>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'007G\'\">Identnummer der erstkatalogisierenden Institution</xsl:when>\r\n                  <xsl:otherwise>Publisher or distributor number</xsl:otherwise>\r\n                </xsl:choose>\r\n              </identifierTypeId>\r\n            </xsl:when>\r\n            <xsl:otherwise>\r\n              <value>\r\n                <xsl:value-of select=\"./subfield[@code=\'0\']\"/>\r\n              </value>\r\n              <identifierTypeId>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"current()[@tag=\'003O\']\">OCLC</xsl:when>\r\n                  <xsl:when test=\"current()[@tag=\'003S\']\">PPN SWB</xsl:when>\r\n                  <xsl:when test=\"current()[@tag=\'004J\']\">ISBN der Reproduktion</xsl:when>\r\n                  <xsl:when test=\"current()[@tag=\'004K\']\">Formal falsche ISBN der Reproduktion</xsl:when>\r\n                  <xsl:when test=\"current()[@tag=\'004D\']\">Formal falsche ISBN</xsl:when>\r\n                  <xsl:when test=\"current()[@tag=\'005I\']\">Autorisierte ISSN</xsl:when>\r\n                  <xsl:when test=\"current()[@tag=\'006A\']\">LCCN</xsl:when>\r\n                </xsl:choose>\r\n              </identifierTypeId>\r\n            </xsl:otherwise>\r\n          </xsl:choose>\r\n        </i>\r\n      </xsl:for-each>\r\n      </arr>\r\n    </identifiers>\r\n\r\n    <!-- Classifications -->\r\n    <xsl:if test=\"marc:datafield[@tag=\'050\' or @tag=\'060\' or @tag=\'080\' or @tag=\'082\' or @tag=\'086\' or @tag=\'090\']\">\r\n      <classifications>\r\n        <arr>\r\n          <xsl:for-each select=\"marc:datafield[@tag=\'050\' or @tag=\'060\' or @tag=\'080\' or @tag=\'082\' or @tag=\'086\' or @tag=\'090\']\">\r\n            <i>\r\n              <xsl:choose>\r\n                <xsl:when test=\"current()[@tag=\'050\']\">\r\n                  <classificationNumber>\r\n                    <xsl:for-each select=\"marc:subfield[@code=\'a\' or @code=\'b\']\">\r\n                      <xsl:if test=\"position() > 1\">\r\n                      <xsl:text>; </xsl:text>\r\n                    </xsl:if>\r\n                    <xsl:value-of select=\".\"/>\r\n                    </xsl:for-each>\r\n                  </classificationNumber>\r\n                  <classificationTypeId>ce176ace-a53e-4b4d-aa89-725ed7b2edac</classificationTypeId> <!-- LC, Library of Congress -->\r\n                </xsl:when>\r\n                <xsl:when test=\"current()[@tag=\'082\']\">\r\n                  <classificationNumber>\r\n                    <xsl:for-each select=\"marc:subfield[@code=\'a\' or @code=\'b\']\">\r\n                      <xsl:if test=\"position() > 1\">\r\n                      <xsl:text>; </xsl:text>\r\n                    </xsl:if>\r\n                    <xsl:value-of select=\".\"/>\r\n                    </xsl:for-each>\r\n                  </classificationNumber>\r\n                  <classificationTypeId>42471af9-7d25-4f3a-bf78-60d29dcf463b</classificationTypeId> <!-- Dewey -->\r\n                </xsl:when>\r\n                <xsl:when test=\"current()[@tag=\'086\']\">\r\n                  <classificationNumber>\r\n                    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n                  </classificationNumber>\r\n                  <classificationTypeId>9075b5f8-7d97-49e1-a431-73fdd468d476</classificationTypeId> <!-- SUDOC -->\r\n                </xsl:when>\r\n              </xsl:choose>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </classifications>\r\n    </xsl:if>\r\n\r\n    <!-- title -->\r\n    <xsl:for-each select=\"datafield[@tag=\'021A\']\">\r\n      <title>\r\n        <xsl:value-of select=\"subfield[@code=\'a\']\" />\r\n        <xsl:if test=\"marc:subfield[@code=\'b\']\">\r\n          <xsl:text> : </xsl:text>\r\n          <xsl:call-template name=\"remove-characters-last\">\r\n            <xsl:with-param  name=\"input\" select=\"marc:subfield[@code=\'b\']\" />\r\n            <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r\n          </xsl:call-template>\r\n        </xsl:if>\r\n        <xsl:if test=\"marc:subfield[@code=\'h\']\">\r\n          <xsl:text> </xsl:text>\r\n          <xsl:call-template name=\"remove-characters-last\">\r\n            <xsl:with-param  name=\"input\" select=\"marc:subfield[@code=\'h\']\" />\r\n            <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r\n          </xsl:call-template>\r\n        </xsl:if>\r\n      </title>\r\n    </xsl:for-each>\r\n\r\n    <matchKey>\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'245\']\">\r\n        <title>\r\n          <xsl:call-template name=\"remove-characters-last\">\r\n            <xsl:with-param  name=\"input\" select=\"marc:subfield[@code=\'a\']\" />\r\n            <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r\n          </xsl:call-template>\r\n        </title>\r\n        <remainder-of-title>\r\n          <xsl:text> : </xsl:text>\r\n          <xsl:call-template name=\"remove-characters-last\">\r\n            <xsl:with-param  name=\"input\" select=\"marc:subfield[@code=\'b\']\" />\r\n            <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r\n          </xsl:call-template>\r\n        </remainder-of-title>\r\n        <medium>\r\n          <xsl:call-template name=\"remove-characters-last\">\r\n            <xsl:with-param  name=\"input\" select=\"marc:subfield[@code=\'h\']\" />\r\n            <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r\n          </xsl:call-template>\r\n        </medium>\r\n        <!-- Only fields that are actually included in\r\n              the instance somewhere - for example in \'title\' -\r\n              should be included as \'matchKey\' elements lest\r\n              the instance \"magically\" splits on \"invisible\"\r\n              properties.\r\n        <name-of-part-section-of-work>\r\n          <xsl:value-of select=\"marc:subfield[@code=\'p\']\" />\r\n        </name-of-part-section-of-work>\r\n        <number-of-part-section-of-work>\r\n          <xsl:value-of select=\"marc:subfield[@code=\'n\']\" />\r\n        </number-of-part-section-of-work>\r\n        <inclusive-dates>\r\n          <xsl:value-of select=\"marc:subfield[@code=\'f\']\" />\r\n        </inclusive-dates> -->\r\n      </xsl:for-each>\r\n    </matchKey>\r\n\r\n    <!-- Contributors -->\r\n    <xsl:if test=\"datafield[@tag=\'028A\']\">\r\n      <contributors>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'028A\']\">\r\n            <i>\r\n              <name>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./subfield[@code=\'d\']\">\r\n                    <xsl:value-of select=\"concat(./subfield[@code=\'a\'], \', \', ./subfield[@code=\'d\'])\" /> \r\n                  </xsl:when>\r\n                  <xsl:when test=\"./subfield[@code=\'D\']\">\r\n                    <xsl:value-of select=\"concat(./subfield[@code=\'A\'], \', \', ./subfield[@code=\'D\'])\" /> \r\n                  </xsl:when>\r\n                  <xsl:otherwise>\r\n                    <xsl:value-of select=\"./subfield[@code=\'a\']\" />\r\n                  </xsl:otherwise>\r\n                </xsl:choose>\r\n              </name>\r\n              <xsl:choose>\r\n                <xsl:when test=\"@tag=\'100\' or @tag=\'700\'\">\r\n                  <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId> <!-- personal name -->\r\n                  <xsl:if test=\"@tag=\'100\'\">\r\n                    <primary>true</primary>\r\n                  </xsl:if>\r\n                </xsl:when>\r\n                <xsl:when test=\"@tag=\'110\' or @tag=\'710\'\">\r\n                  <contributorNameTypeId>2e48e713-17f3-4c13-a9f8-23845bb210aa</contributorNameTypeId> <!-- corporate name -->\r\n                </xsl:when>\r\n                <xsl:when test=\"@tag=\'111\' or @tage=\'711\'\">\r\n                  <contributorNameTypeId>e8b311a6-3b21-43f2-a269-dd9310cb2d0a</contributorNameTypeId> <!-- meeting name -->\r\n                </xsl:when>\r\n                <xsl:otherwise>\r\n                  <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId> <!-- personal name -->\r\n                </xsl:otherwise>\r\n              </xsl:choose>\r\n              <xsl:if test=\"marc:subfield[@code=\'e\' or @code=\'4\']\">\r\n                <contributorTypeId>\r\n                  <xsl:call-template name=\"map-relator\"/>\r\n                </contributorTypeId>\r\n              </xsl:if>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </contributors>\r\n    </xsl:if>\r\n\r\n    <!-- Editions -->\r\n    <xsl:if test=\"marc:datafield[@tag=\'250\']\">\r\n      <editions>\r\n        <arr>\r\n        <xsl:for-each select=\"marc:datafield[@tag=\'250\']\">\r\n          <i>\r\n            <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n            <xsl:if test=\"marc:subfield[@code=\'b\']\">; <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/></xsl:if>\r\n          </i>\r\n        </xsl:for-each>\r\n        </arr>\r\n      </editions>\r\n    </xsl:if>\r\n\r\n    <!-- Publication -->\r\n    <xsl:for-each select=\"datafield[@tag=\'033A\']\">\r\n      <publication>\r\n        <arr>\r\n          <i>\r\n            <publisher>\r\n              <xsl:value-of select=\"./subfield[@code=\'n\']\"></xsl:value-of>\r\n            </publisher>\r\n            <place>\r\n              <xsl:value-of select=\"./subfield[@code=\'p\']\"></xsl:value-of>\r\n            </place>\r\n            <xsl:if test=\"..//datafield[@tag=\'011@\']\">\r\n              <dateOfPublication>\r\n                <xsl:variable name=\"date-a\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'a\']\" />\r\n                <xsl:variable name=\"date-b\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'b\']\" />\r\n                <xsl:variable name=\"date-c\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'c\']\" />\r\n                <xsl:variable name=\"date-d\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'d\']\" />\r\n                <xsl:variable name=\"date-n\" select=\"../datafield[@tag=\'011@\']/subfield[@code=\'n\']\" />\r\n                <xsl:variable name=\"date-ab\" select=\"concat($date-a, \'-\', $date-b)\" />\r\n                <xsl:variable name=\"date-cd\" select=\"concat($date-c, \'-\', $date-d)\" />\r\n                <xsl:variable name=\"date-ac\" select=\"concat($date-a, \' (\', $date-c, \')\')\" />\r\n                <xsl:variable name=\"date-abcd\" select=\"concat($date-ab, \' (\', $date-cd, \')\')\" />\r\n                <xsl:choose>\r\n                  <xsl:when test=\"$date-d and $date-n\"><xsl:value-of select=\"concat($date-abcd, \' (\', $date-n, \')\')\" /></xsl:when> \r\n                  <xsl:when test=\"$date-d\"><xsl:value-of select=\"$date-abcd\" /></xsl:when>\r\n                  <xsl:when test=\"$date-c and $date-n\"><xsl:value-of select=\"concat($date-ac, \' (\', $date-n, \')\')\" /></xsl:when> \r\n                  <xsl:when test=\"$date-c\"><xsl:value-of select=\"$date-ac\" /></xsl:when>\r\n                  <xsl:when test=\"$date-b and $date-n\"><xsl:value-of select=\"concat($date-ab, \' (\', $date-n, \')\')\" /></xsl:when> \r\n                  <xsl:when test=\"$date-b\"><xsl:value-of select=\"$date-ab\" /></xsl:when>\r\n                  <xsl:when test=\"$date-a and $date-n\"><xsl:value-of select=\"concat($date-a, \' (\', $date-n, \')\')\" /></xsl:when> \r\n                  <xsl:otherwise><xsl:value-of select=\"$date-a\"/></xsl:otherwise>\r\n                </xsl:choose>\r\n              </dateOfPublication>\r\n            </xsl:if>\r\n          </i>\r\n        </arr>\r\n      </publication>\r\n    </xsl:for-each>\r\n\r\n    <xsl:if test=\"datafield[@tag=\'011B\']\">\r\n      <notes>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'011B\']\">\r\n            <i>\r\n                <xsl:choose>\r\n                  <xsl:when test=\"./@tag=\'011B\'\">\r\n                    <note>\r\n                      <xsl:if test=\"./subfield[@code=\'b\']\">\r\n                        <xsl:value-of select=\"concat(./subfield[@code=\'a\'], \'-\', ./subfield[@code=\'b\'])\" />\r\n                      </xsl:if>\r\n                      <xsl:if test=\"not(./subfield[@code=\'b\'])\">\r\n                        <xsl:value-of select=\"./subfield[@code=\'a\']\" />\r\n                      </xsl:if>\r\n                    </note>\r\n                    <instanceNoteTypeId>6a2533a7-4de2-4e64-8466-074c2fa9308c</instanceNoteTypeId> <!-- general -->\r\n                  </xsl:when>\r\n                </xsl:choose>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </notes>\r\n    </xsl:if>\r\n\r\n    <!-- Nature of conents (can\'t find any examples for testing puposes) -->\r\n    <xsl:if test=\"datafield[@tag=\'013\']/subfield[@code=\'8\']\">\r\n      <natureOfContentTermIds>\r\n        <arr>\r\n          <i>nature of contents</i>\r\n        </arr>\r\n      </natureOfContentTermIds>\r\n    </xsl:if>\r\n\r\n    <!-- languages -->\r\n    <xsl:if test=\"datafield[@tag=\'010@\']/subfield[@code=\'a\']\">\r\n      <languages>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'010@\']/subfield[@code=\'a\']\">\r\n            <i>\r\n              <xsl:value-of select=\".\" />\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </languages>\r\n    </xsl:if>\r\n\r\n    <!-- publicationFrequency -->\r\n    <xsl:if test=\"datafield[@tag=\'018@\']/subfield[@code=\'a\']\">\r\n      <publicationFrequency>\r\n        <arr>\r\n          <xsl:for-each select=\"datafield[@tag=\'018@\']/subfield[@code=\'a\']\">\r\n            <i>\r\n              <xsl:value-of select=\".\" />\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </publicationFrequency>\r\n    </xsl:if>\r\n    \r\n\r\n    <!-- physicalDescriptions -->\r\n    <xsl:if test=\"marc:datafield[@tag=\'300\']\">\r\n      <physicalDescriptions>\r\n        <arr>\r\n          <xsl:for-each select=\"marc:datafield[@tag=\'300\']\">\r\n            <i>\r\n              <xsl:call-template name=\"remove-characters-last\">\r\n                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code=\'a\']\" />\r\n                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r\n              </xsl:call-template>\r\n            </i>\r\n          </xsl:for-each>\r\n        </arr>\r\n      </physicalDescriptions>\r\n    </xsl:if>\r\n\r\n    <!-- Subjects -->\r\n    <xsl:if test=\"marc:datafield[@tag=\'600\' or @tag=\'610\' or @tag=\'611\' or @tag=\'630\' or @tag=\'648\' or @tag=\'650\' or @tag=\'651\' or @tag=\'653\' or @tag=\'654\' or @tag=\'655\' or @tag=\'656\' or @tag=\'657\' or @tag=\'658\' or @tag=\'662\' or @tag=\'69X\']\">\r\n      <subjects>\r\n        <arr>\r\n        <xsl:for-each select=\"marc:datafield[@tag=\'600\' or @tag=\'610\' or @tag=\'611\' or @tag=\'630\' or @tag=\'648\' or @tag=\'650\' or @tag=\'651\' or @tag=\'653\' or @tag=\'654\' or @tag=\'655\' or @tag=\'656\' or @tag=\'657\' or @tag=\'658\' or @tag=\'662\' or @tag=\'69X\']\">\r\n          <i>\r\n          <xsl:for-each select=\"marc:subfield[@code=\'a\' or @code=\'b\' or @code=\'c\' or @code=\'d\' or @code=\'f\' or @code=\'g\' or @code=\'j\' or @code=\'k\' or @code=\'l\' or @code=\'n\' or @code=\'p\' or @code=\'q\' or @code=\'t\' or @code=\'u\' or @code=\'v\' or @code=\'z\']\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>--</xsl:text>\r\n            </xsl:if>\r\n            <xsl:call-template name=\"remove-characters-last\">\r\n                <xsl:with-param  name=\"input\" select=\".\" />\r\n                <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\r\n              </xsl:call-template>\r\n          </xsl:for-each>\r\n          </i>\r\n        </xsl:for-each>\r\n        </arr>\r\n      </subjects>\r\n    </xsl:if>\r\n\r\n    <!-- holdings and items -->\r\n    <passthrough>\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'852\' or @tag=\'900\' or @tag=\'954\' or @tag=\'995\']\">\r\n        <xsl:copy-of select=\".\"/>\r\n      </xsl:for-each>\r\n    </passthrough>      \r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"text()\"/>\r\n\r\n  <xsl:template name=\"pica-to-iso-date\">\r\n    <xsl:param name=\"input\" />\r\n    <xsl:param name=\"suffix\" />\r\n    <xsl:variable name=\"rawdate\" select=\"substring-after($input, \':\')\" />\r\n    <xsl:variable name=\"day\" select=\"substring-before($rawdate, \'-\')\" />\r\n    <xsl:variable name=\"moyr\" select=\"substring-after($rawdate, \'-\')\" />\r\n    <xsl:variable name=\"month\" select=\"substring-before($moyr, \'-\')\" />\r\n    <xsl:variable name=\"shortyear\" select=\"substring-after($moyr, \'-\')\" />\r\n    <xsl:if test=\"$shortyear &gt; 50\">\r\n      <xsl:variable name=\"year\" select=\"concat(\'19\', $shortyear)\" />\r\n      <xsl:value-of select=\"concat($year, \'-\', $month, \'-\', $day, $suffix)\" />\r\n    </xsl:if>\r\n    <xsl:if test=\"$shortyear &lt; 51\">\r\n      <xsl:variable name=\"year\" select=\"concat(\'20\', $shortyear)\" />\r\n      <xsl:value-of select=\"concat($year, \'-\', $month, \'-\', $day, $suffix)\" />\r\n    </xsl:if>\r\n  </xsl:template>\r\n\r\n  <xsl:template name=\"remove-characters-last\">\r\n    <xsl:param name=\"input\" />\r\n    <xsl:param name=\"characters\"/>\r\n    <xsl:variable name=\"lastcharacter\" select=\"substring($input,string-length($input))\" />\r\n    <xsl:choose>\r\n      <xsl:when test=\"$characters and $lastcharacter and contains($characters, $lastcharacter)\">\r\n        <xsl:call-template name=\"remove-characters-last\">\r\n          <xsl:with-param  name=\"input\" select=\"substring($input,1, string-length($input)-1)\" />\r\n          <xsl:with-param  name=\"characters\" select=\"$characters\" />\r\n        </xsl:call-template>\r\n      </xsl:when>\r\n      <xsl:otherwise>\r\n        <xsl:value-of select=\"$input\"/>\r\n      </xsl:otherwise>\r\n    </xsl:choose>\r\n  </xsl:template>\r\n\r\n</xsl:stylesheet>\r\n',NULL,'xml','xml',NULL,'','','');
/*!40000 ALTER TABLE `STEP` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `STORAGE` WRITE;
/*!40000 ALTER TABLE `STORAGE` DISABLE KEYS */;
INSERT INTO `STORAGE` (`ID`, `DTYPE`, `ENABLED`, `CURRENTSTATUS`, `NAME`, `MESSAGE`, `TRANSFORMATION`, `DESCRIPTION`, `URL`, `CUSTOMCLASS`, `LOGLEVEL`, `MAILLEVEL`, `MAILADDRESS`, `BULKSIZE`, `TIMEOUT`, `RETRYCOUNT`, `RETRYWAIT`, `ACL`) VALUES (10001,'InventoryStorageEntity',1,'TODO','ESXH-9 (GBV)',NULL,NULL,'This is GBV\'s test server.  It is behind a firewall and probably won\'t work for most.','http://esxh-9.gbv.de:9130/','',NULL,NULL,NULL,1000,NULL,NULL,NULL,'');
INSERT INTO `STORAGE` (`ID`, `DTYPE`, `ENABLED`, `CURRENTSTATUS`, `NAME`, `MESSAGE`, `TRANSFORMATION`, `DESCRIPTION`, `URL`, `CUSTOMCLASS`, `LOGLEVEL`, `MAILLEVEL`, `MAILADDRESS`, `BULKSIZE`, `TIMEOUT`, `RETRYCOUNT`, `RETRYWAIT`, `ACL`) VALUES (10002,'InventoryStorageEntity',1,'TODO','GBV Demo',NULL,NULL,'GBV\'s public Folio demo.','https://folio-demo.gbv.de/okapi','',NULL,NULL,NULL,1000,NULL,NULL,NULL,'');
/*!40000 ALTER TABLE `STORAGE` ENABLE KEYS */;
UNLOCK TABLES;

LOCK TABLES `TRANSFORMATION` WRITE;
/*!40000 ALTER TABLE `TRANSFORMATION` DISABLE KEYS */;
INSERT INTO `TRANSFORMATION` (`ID`, `DTYPE`, `DESCRIPTION`, `ENABLED`, `NAME`, `PARALLEL`,`ACL`) VALUES (10004,'BasicTransformation','',1,'CBS2FOLIO',0,'');
/*!40000 ALTER TABLE `TRANSFORMATION` ENABLE KEYS */;
UNLOCK TABLES;


LOCK TABLES `TRANSFORMATION_STEP` WRITE;
/*!40000 ALTER TABLE `TRANSFORMATION_STEP` DISABLE KEYS */;
INSERT INTO `TRANSFORMATION_STEP` (`ID`, `DTYPE`, `POSITION`, `TRANSFORMATION_ID`, `STEP_ID`) VALUES (10005,'TransformationStepAssociation',2,10004,10002);
INSERT INTO `TRANSFORMATION_STEP` (`ID`, `DTYPE`, `POSITION`, `TRANSFORMATION_ID`, `STEP_ID`) VALUES (10006,'TransformationStepAssociation',1,10004,10003);
INSERT INTO `TRANSFORMATION_STEP` (`ID`, `DTYPE`, `POSITION`, `TRANSFORMATION_ID`, `STEP_ID`) VALUES (10007,'TransformationStepAssociation',3,10004,4003);
/*!40000 ALTER TABLE `TRANSFORMATION_STEP` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-03-13 18:28:48
