-- MySQL dump 10.13  Distrib 5.1.66, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: localindices
-- ------------------------------------------------------
-- Server version	5.1.66-0+squeeze1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `HARVESTABLE`
--

DROP TABLE IF EXISTS `HARVESTABLE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `HARVESTABLE` (
  `ID` bigint(20) NOT NULL,
  `DTYPE` varchar(31) DEFAULT NULL,
  `ENABLED` tinyint(1) DEFAULT '0',
  `LASTUPDATED` datetime DEFAULT NULL,
  `DESCRIPTION` varchar(4096) DEFAULT NULL,
  `INITIALLYHARVESTED` datetime DEFAULT NULL,
  `TECHNICALNOTES` varchar(4096) DEFAULT NULL,
  `LASTHARVESTSTARTED` datetime DEFAULT NULL,
  `SCHEDULESTRING` varchar(255) DEFAULT NULL,
  `LASTHARVESTFINISHED` datetime DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `CURRENTSTATUS` varchar(255) DEFAULT NULL,
  `CONTACTNOTES` varchar(4096) DEFAULT NULL,
  `AMOUNTHARVESTED` int(11) DEFAULT NULL,
  `SERVICEPROVIDER` varchar(255) DEFAULT NULL,
  `MESSAGE` varchar(4096) DEFAULT NULL,
  `MAXDBSIZE` int(11) DEFAULT NULL,
  `HARVESTIMMEDIATELY` tinyint(1) NOT NULL DEFAULT '0',
  `FILETYPEMASKS` varchar(255) DEFAULT NULL,
  `URIMASKS` varchar(255) DEFAULT NULL,
  `STARTURLS` varchar(16384) DEFAULT NULL,
  `RECURSIONDEPTH` int(11) DEFAULT NULL,
  `EXPECTEDSCHEMA` varchar(255) DEFAULT NULL,
  `URL` varchar(16384) DEFAULT NULL,
  `NORMALIZATIONFILTER` varchar(255) DEFAULT NULL,
  `SCHEMAURI` varchar(255) DEFAULT NULL,
  `OAISETNAME` varchar(255) DEFAULT NULL,
  `FROMDATE` date DEFAULT NULL,
  `UNTILDATE` date DEFAULT NULL,
  `METADATAPREFIX` varchar(255) DEFAULT NULL,
  `DATEFORMAT` varchar(255) DEFAULT NULL,
  `RESUMPTIONTOKEN` varchar(255) DEFAULT NULL,
  `STORAGE_ID` bigint(20) DEFAULT NULL,
  `TRANSFORMATION_ID` bigint(20) DEFAULT NULL,
  `OVERWRITE` tinyint(1) DEFAULT NULL,
  `SPLITAT` varchar(255) DEFAULT NULL,
  `SPLITSIZE` varchar(255) DEFAULT NULL,
  `OUTPUTSCHEMA` varchar(255) DEFAULT NULL,
  `ENCODING` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_HARVESTABLE_STORAGE_ID` (`STORAGE_ID`),
  CONSTRAINT `FK_HARVESTABLE_STORAGE_ID` FOREIGN KEY (`STORAGE_ID`) REFERENCES `STORAGE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HARVESTABLE`
--

LOCK TABLES `HARVESTABLE` WRITE;
/*!40000 ALTER TABLE `HARVESTABLE` DISABLE KEYS */;
INSERT INTO `HARVESTABLE` VALUES (52,'OaiPmhResource',1,'2013-01-02 12:40:47','','2011-05-12 16:00:34','','2013-01-31 16:11:40','0 12 * * 3','2013-01-31 16:11:45','RUG NL','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://ir.ub.rug.nl/oai/',NULL,NULL,NULL,'2013-01-30',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(103,'OaiPmhResource',1,'2013-01-02 13:07:36','','2011-05-18 13:31:38','','2013-01-29 00:00:00','0 0 * * 2','2013-01-29 00:00:04','Alexandria','OK','',NULL,'Alexandria - University of St.Gallen (Switzerland)',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://www.alexandria.unisg.ch/EXPORT/OAI/server.oai',NULL,NULL,NULL,'2013-01-29',NULL,'oai_dc','yyyy-MM-dd\'T\'hh:mm:ss\'Z\'',NULL,102,10,0,NULL,NULL,NULL,NULL),(152,'OaiPmhResource',1,'2012-11-27 13:50:40','','2011-05-18 13:38:59','','2013-01-29 20:00:00','0 20 * * 2','2013-01-29 20:01:50','Zurich Open Repository and Archive','OK','',NULL,'Zurich Open Repository and Archive',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://www.zora.uzh.ch/cgi/oai2',NULL,NULL,NULL,'2013-01-29',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(202,'OaiPmhResource',1,'2012-12-06 14:11:14','http://www.diva-portal.org/dice/oai?verb=ListRecords&metadataPrefix=marc21','2011-05-22 17:16:50','','2013-01-31 05:00:00','0 5 * * 4','2013-01-31 05:00:05','Diva-portal (marc21)','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://www.diva-portal.org/dice/oai',NULL,NULL,NULL,'2013-01-31',NULL,'marc21','yyyy-MM-dd',NULL,102,20,1,NULL,NULL,NULL,NULL),(253,'OaiPmhResource',1,'2012-12-06 14:10:40','','2011-05-22 21:40:47','','2013-01-30 01:00:00','0 1 * * 3','2013-01-30 01:00:01','Annals of Genealogical Research','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://www.genlit.org/agr/oai/',NULL,NULL,NULL,'2013-01-30',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(254,'OaiPmhResource',1,'2012-11-15 13:18:01','','2011-05-22 21:53:38','','2013-01-31 02:00:00','0 2 * * 4','2013-01-31 02:05:10','Aston University Research Archive','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://eprints.aston.ac.uk/cgi/oai2',NULL,NULL,NULL,'2013-01-31',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(255,'OaiPmhResource',0,'2012-01-16 15:03:23','','2011-05-22 22:01:29','','2012-01-13 12:36:17','0 9 * * 5','2012-01-06 09:01:16','Internet Archive','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://www.archive.org/services/oai.php','',NULL,'collection:texts',NULL,'2012-01-12','oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(303,'OaiPmhResource',1,'2012-12-06 14:11:21','','2011-05-23 10:41:06','','2012-12-06 14:11:31','0 23 11 * 1','2012-12-06 14:26:17','Universit√§t Potsdam','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://opus.kobv.de/ubp/oai2/oai2.php',NULL,NULL,NULL,'2012-12-06',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(3104,'XmlBulkResource',1,'2012-12-11 08:26:37','Project Gutenberg import','2011-09-05 17:04:53','','2013-01-29 06:00:00','0 6 * * 2','2013-01-29 06:02:05','Gutenberg','OK','',NULL,'Index Data',NULL,NULL,0,NULL,NULL,NULL,NULL,'','http://localhost/gutenberg/catalog-clean-authors.pz',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,4202,0,'1','1','',NULL),(3552,'XmlBulkResource',1,'2013-01-02 12:29:15','','2011-12-28 21:22:32','','2013-01-30 08:00:00','0 8 * * 3','2013-01-30 08:01:56','Gutenberg (zipped)','OK','',NULL,'Gutenberg Project',NULL,NULL,0,NULL,NULL,NULL,NULL,'','http://www.gutenberg.org/feeds/catalog.rdf.zip',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,3102,0,'1','100','',NULL),(3602,'XmlBulkResource',1,'2013-01-21 09:42:37','','2011-12-29 12:54:33','','2013-01-30 22:00:00','0 22 * * 3','2013-01-31 02:01:05','Wikipedia (English)','OK','',NULL,'Wikipedia Foundation',NULL,NULL,0,NULL,NULL,NULL,NULL,'','http://dumps.wikimedia.org/enwiki/latest/enwiki-latest-abstract.xml',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,3603,1,'1','1000',NULL,NULL),(3702,'XmlBulkResource',1,'2013-01-02 12:13:41','Demo data','2012-01-02 14:43:14','','2013-01-30 10:10:00','10 10 * * 3','2013-01-30 10:16:50','Auto-Graphics (marc8)','OK','',NULL,'AutoGraphic',NULL,NULL,0,NULL,NULL,NULL,NULL,'application/marc; charset=MARC-8','http://localhost/ag/demo_org.mrc',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,2953,0,'1','1000','',NULL),(3752,'XmlBulkResource',1,'2013-01-28 12:16:18','','2012-01-04 11:26:36','','2013-01-29 10:30:00','30 10 * * 2','2013-01-29 16:07:02','LoC (Jump Page with binary marc)','OK','',NULL,'Library of Congress',NULL,NULL,0,NULL,NULL,NULL,NULL,'application/marc; charset=MARC8','http://maki.indexdata.com/marcdata/meta/loc/harvester-index.html',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,5052,0,'1','1000','application/tmarc',''),(3902,'XmlBulkResource',1,'2012-12-17 10:19:53','','2012-01-11 13:01:24','','2012-12-17 10:19:55','0 9 10 * 1','2012-12-18 04:53:38','OAIster','OK','',NULL,'Open Archive Initiative',NULL,NULL,0,NULL,NULL,NULL,NULL,'application/marc','http://maki.indexdata.com/marcdata/meta/oaister/harvester-index.html',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,5052,0,'1','1000','application/tmarc',NULL),(4003,'XmlBulkResource',1,'2013-01-02 12:38:08','','2012-01-16 15:35:04','','2013-01-30 10:00:00','0 10 * * 3','2013-01-30 10:09:26','Koha (MARC)','OK','',NULL,'Koha',NULL,NULL,0,NULL,NULL,NULL,NULL,'application/marc; charset=MARC-8','http://localhost/koha/koha.mrc',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,2954,0,'1','1000','application/tmarc',NULL),(4452,'XmlBulkResource',0,'2013-01-02 13:05:18','German Catalog','2012-07-13 09:26:03','','2012-11-27 12:56:06','0 15 * * 6','2012-11-10 15:36:38','B3 Katalog (RDF)','NEW','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,'','http://lod.b3kat.de/download/lod.b3kat.de.part0.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part1.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part2.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part3.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part4.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part5.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part6.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part7.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part8.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part9.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part10.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part11.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part12.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part13.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part14.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part15.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part16.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part17.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part18.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part19.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part20.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part21.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part22.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part23.rdf.gz\r\nhttp://lod.b3kat.de/download/lod.b3kat.de.part24.rdf.gz http://lod.b3kat.de/download/lod.b3kat.de.part25.rdf.gz',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,3103,0,'1','1000','',NULL),(4502,'OaiPmhResource',1,'2013-01-02 13:08:21','','2012-07-24 11:08:43','','2013-01-29 00:00:00','0 0 * * 2','2013-01-29 00:00:02','ARTstor','OK','',NULL,'',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://oai.artstor.org/oaicatmuseum/OAIHandler',NULL,NULL,NULL,'2013-01-29',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,NULL),(4602,'XmlBulkResource',0,'2012-12-03 17:23:24','','2012-01-11 20:11:06','','2012-12-03 17:23:34','30 10 * * 2','2012-12-04 06:43:34','Abebook (US)','OK','',NULL,'Abebook',NULL,NULL,0,NULL,NULL,NULL,NULL,'application/marc','http://maki.indexdata.com/marcdata/archive.org/abebooks/us.mrc.gz',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,102,2953,1,'1','1000','',NULL),(5153,'OaiPmhResource',1,'2013-01-23 14:06:55','','2013-01-21 09:32:03','','2013-01-25 10:00:01','0 10 * * 5','2013-01-25 10:00:02','InTech Open','OK','',NULL,'InTech / Credo',NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,'http://www.intechopen.com/oai/index.php','1358803897610',NULL,NULL,'2013-01-25',NULL,'oai_dc','yyyy-MM-dd',NULL,102,10,0,NULL,NULL,NULL,'ISO-8859-1');
/*!40000 ALTER TABLE `HARVESTABLE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `SEQUENCE`
--

DROP TABLE IF EXISTS `SEQUENCE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `SEQUENCE` (
  `SEQ_NAME` varchar(50) NOT NULL,
  `SEQ_COUNT` decimal(38,0) DEFAULT NULL,
  PRIMARY KEY (`SEQ_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `SEQUENCE`
--

LOCK TABLES `SEQUENCE` WRITE;
/*!40000 ALTER TABLE `SEQUENCE` DISABLE KEYS */;
INSERT INTO `SEQUENCE` VALUES ('SEQ_GEN','5201');
/*!40000 ALTER TABLE `SEQUENCE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `STEP`
--

DROP TABLE IF EXISTS `STEP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `STEP` (
  `ID` bigint(20) NOT NULL,
  `DTYPE` varchar(31) DEFAULT NULL,
  `DESCRIPTION` varchar(4096) DEFAULT NULL,
  `ENABLED` tinyint(1) DEFAULT '0',
  `NAME` varchar(255) DEFAULT NULL,
  `SCRIPT` text,
  `INPUTFORMAT` varchar(255) DEFAULT NULL,
  `TYPE` varchar(255) DEFAULT NULL,
  `OUTPUTFORMAT` varchar(255) DEFAULT NULL,
  `TESTDATA` text,
  `TESTOUTPUT` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `STEP`
--

LOCK TABLES `STEP` WRITE;
/*!40000 ALTER TABLE `STEP` DISABLE KEYS */;
INSERT INTO `STEP` VALUES (10,'BasicTransformationStep',NULL,1,'OAIPMH-DC to PZ','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n\n    This stylesheet expects oai/dc records\n-->\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\n    xmlns:oai=\"http://www.openarchives.org/OAI/2.0/\"\n    xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n    xmlns:dcterms=\"http://purl.org/dc/terms/\">\n\n  <xsl:output indent=\"yes\"\n              method=\"xml\"\n              version=\"1.0\"\n              encoding=\"UTF-8\"/>\n\n  <xsl:template match=\"/oai:OAI-PMH\">\n    <xsl:apply-templates/>\n  </xsl:template>\n\n  <xsl:template match=\"oai:ListRecords\">\n    <pz:collection>\n      <xsl:apply-templates/>\n    </pz:collection>\n  </xsl:template>\n\n  <xsl:template match=\"oai:record\">\n    <pz:record>\n      <pz:metadata type=\"id\">\n        <xsl:value-of select=\"oai:header/oai:identifier\"/>\n      </pz:metadata>\n      <xsl:if test=\"oai:header[@status=\'deleted\']\">\n	<pz:metadata type=\"record_status\">deleted</pz:metadata>\n      </xsl:if>\n      <xsl:apply-templates/>\n    </pz:record>\n  </xsl:template>\n    \n  <xsl:template match=\"oai:metadata/*\">\n    <xsl:for-each select=\"dc:title\">\n      <pz:metadata type=\"title\">\n        <xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n    <xsl:for-each select=\"dc:date\">\n      <pz:metadata type=\"date\">\n	<xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n    <xsl:for-each select=\"dc:subject\">\n      <pz:metadata type=\"subject\">\n	<xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n    <xsl:for-each select=\"dc:creator\">\n      <pz:metadata type=\"author\">\n        <xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n    <xsl:for-each select=\"dc:description\">\n      <pz:metadata type=\"description\">\n	<xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n    <xsl:for-each select=\"dc:identifier\">\n      <pz:metadata type=\"electronic-url\">\n	<xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n    <xsl:for-each select=\"dc:type\">\n      <pz:metadata type=\"medium\">\n	<xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n      \n    <xsl:for-each select=\"dcterms:bibliographicCitation\">\n      <pz:metadata type=\"citation\">\n        <xsl:value-of select=\".\"/>\n      </pz:metadata>\n    </xsl:for-each>\n\n  </xsl:template>\n\n  <xsl:template match=\"text()\"/>\n\n</xsl:stylesheet>',NULL,NULL,NULL,NULL,NULL),(20,'BasicTransformationStep',NULL,1,'OAIPMH-MARC to MARC21','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n\n    This stylesheet pulls out marc records from the oai-pmh response\n    and overwrites the controlfield 001 with oai-identifier\n-->\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:oai=\"http://www.openarchives.org/OAI/2.0/\"\n    xmlns:marc=\"http://www.loc.gov/MARC21/slim\"\n    xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\n    exclude-result-prefixes=\"oai\">\n\n\n <xsl:output indent=\"yes\"\n        method=\"xml\"\n        version=\"1.0\"\n        encoding=\"UTF-8\"/>\n\n\n<xsl:template match=\"/\">\n<collection>\n  <xsl:apply-templates/>\n</collection>\n\n</xsl:template>\n\n  <xsl:template match=\"//oai:record\">\n    <xsl:if test=\"oai:header[@status=\'deleted\']\">\n      <delete><xsl:attribute name=\"id\"><xsl:value-of select=\"oai:header/oai:identifier\"/></xsl:attribute></delete>\n    </xsl:if>\n    <xsl:if test=\"not(oai:header[@status=\'deleted\'])\">\n      <xsl:variable name=\"oai-id\">\n          <xsl:value-of select=\"oai:header/oai:identifier\"/>\n      </xsl:variable>\n\n      <xsl:for-each select=\"oai:metadata/marc:record\">\n        <xsl:copy>\n          <xsl:copy-of select=\"@*\"/>\n          <xsl:copy-of select=\"*\"/>\n          <pz:metadata type=\"id\">\n           <xsl:value-of select=\"$oai-id\"/>\n          </pz:metadata>\n        </xsl:copy>\n      </xsl:for-each>\n    </xsl:if>\n  </xsl:template>\n\n  <xsl:template match=\"text()\"/>\n\n</xsl:stylesheet>',NULL,NULL,NULL,NULL,NULL),(22,'BasicTransformationStep',NULL,1,'MARC21 to PZ','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\n    xmlns:marc=\"http://www.loc.gov/MARC21/slim\">\n\n  \n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\n\n<!-- Extract metadata from MARC21/USMARC \n      http://www.loc.gov/marc/bibliographic/ecbdhome.html\n-->  \n  <xsl:include href=\"pz2-ourl-marc21.xsl\" />\n\n  <xsl:template match=\"/\">\n    <pz:collection> \n      <xsl:apply-templates />\n    </pz:collection>\n  </xsl:template>        \n  \n  <xsl:template match=\"//delete\">\n	<xsl:copy-of select=\".\"/>                                                                                                                                                                               \n  </xsl:template> \n  \n  <xsl:template match=\"//marc:record\">\n    <xsl:variable name=\"title_medium\" select=\"marc:datafield[@tag=\'245\']/marc:subfield[@code=\'h\']\"/>\n    <xsl:variable name=\"journal_title\" select=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'t\']\"/>\n    <xsl:variable name=\"electronic_location_url\" select=\"marc:datafield[@tag=\'856\']/marc:subfield[@code=\'u\']\"/>\n    <xsl:variable name=\"fulltext_a\" select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'a\']\"/>\n    <xsl:variable name=\"fulltext_b\" select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'b\']\"/>\n    <xsl:variable name=\"medium\">\n      <xsl:choose>\n	<xsl:when test=\"$title_medium\">\n	  <xsl:value-of select=\"substring-after(substring-before($title_medium,\']\'),\'[\')\"/>\n	</xsl:when>\n	<xsl:when test=\"$fulltext_a\">\n	  <xsl:text>electronic resource</xsl:text>\n	</xsl:when>\n	<xsl:when test=\"$fulltext_b\">\n	  <xsl:text>electronic resource</xsl:text>\n	</xsl:when>\n	<xsl:when test=\"$journal_title\">\n	  <xsl:text>article</xsl:text>\n	</xsl:when>\n	<xsl:otherwise>\n	  <xsl:text>book</xsl:text>\n	</xsl:otherwise>\n      </xsl:choose>\n    </xsl:variable>\n\n    <pz:record>      \n      <xsl:for-each select=\"marc:controlfield[@tag=\'001\']\">\n        <pz:metadata type=\"id\">\n          <xsl:value-of select=\".\"/>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'010\']\">\n        <pz:metadata type=\"lccn\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'020\']\">\n        <pz:metadata type=\"isbn\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'022\']\">\n        <pz:metadata type=\"issn\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'027\']\">\n        <pz:metadata type=\"tech-rep-nr\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'035\']\">\n        <pz:metadata type=\"system-control-nr\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'100\']\">\n	<pz:metadata type=\"author\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"author-title\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"author-date\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'110\']\">\n	<pz:metadata type=\"corporate-name\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"corporate-location\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"corporate-date\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'111\']\">\n	<pz:metadata type=\"meeting-name\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"meeting-location\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"meeting-date\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\n	<pz:metadata type=\"date\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'245\']\">\n        <pz:metadata type=\"title\">\n          <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n        </pz:metadata>\n        <pz:metadata type=\"title-remainder\">\n          <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\n        </pz:metadata>\n        <pz:metadata type=\"title-responsibility\">\n          <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n        </pz:metadata>\n        <pz:metadata type=\"title-dates\">\n          <xsl:value-of select=\"marc:subfield[@code=\'f\']\"/>\n        </pz:metadata>\n        <pz:metadata type=\"title-medium\">\n          <xsl:value-of select=\"marc:subfield[@code=\'h\']\"/>\n        </pz:metadata>\n        <pz:metadata type=\"title-number-section\">\n          <xsl:value-of select=\"marc:subfield[@code=\'n\']\"/>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'250\']\">\n	<pz:metadata type=\"edition\">\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\n        <pz:metadata type=\"publication-place\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n        <pz:metadata type=\"publication-name\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\n	</pz:metadata>\n        <pz:metadata type=\"publication-date\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'300\']\">\n	<pz:metadata type=\"physical-extent\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"physical-format\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"physical-dimensions\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"physical-accomp\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'e\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"physical-unittype\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'f\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"physical-unitsize\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'g\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"physical-specified\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'3\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'440\']\">\n	<pz:metadata type=\"series-title\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag = \'500\' or @tag = \'505\' or @tag = \'518\' or @tag = \'520\' or @tag = \'522\']\">\n	<pz:metadata type=\"description\">\n            <xsl:value-of select=\"*/text()\"/>\n        </pz:metadata>\n      </xsl:for-each>\n      \n      <xsl:for-each select=\"marc:datafield[@tag=\'600\' or @tag=\'610\' or @tag=\'611\' or @tag=\'630\' or @tag=\'648\' or @tag=\'650\' or @tag=\'651\' or @tag=\'653\' or @tag=\'654\' or @tag=\'655\' or @tag=\'656\' or @tag=\'657\' or @tag=\'658\' or @tag=\'662\' or @tag=\'69X\']\">\n        <pz:metadata type=\"subject\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"subject-long\">\n	  <xsl:for-each select=\"marc:subfield\">\n	    <xsl:if test=\"position() > 1\">\n	      <xsl:text>, </xsl:text>\n	    </xsl:if>\n	    <xsl:value-of select=\".\"/>\n	  </xsl:for-each>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'856\']\">\n	<pz:metadata type=\"electronic-url\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'u\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"electronic-text\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'y\']\"/>\n	</pz:metadata>\n	<pz:metadata type=\"electronic-note\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'z\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'773\']\">\n        <pz:metadata type=\"citation\">\n          <xsl:for-each select=\"*\">\n            <xsl:value-of select=\"normalize-space(.)\"/>\n            <xsl:text> </xsl:text>\n          </xsl:for-each>\n        </pz:metadata>\n        <xsl:if test=\"marc:subfield[@code=\'t\']\">\n          <pz:metadata type=\"journal-title\">\n            <xsl:value-of select=\"marc:subfield[@code=\'t\']\"/>\n          </pz:metadata>\n        </xsl:if>\n        <xsl:if test=\"marc:subfield[@code=\'g\']\">\n          <pz:metadata type=\"journal-subpart\">\n            <xsl:value-of select=\"marc:subfield[@code=\'g\']\"/>\n          </pz:metadata>\n        </xsl:if>\n      </xsl:for-each>\n\n      <pz:metadata type=\"medium\">\n	<xsl:value-of select=\"$medium\"/>\n      </pz:metadata>\n      \n      <xsl:for-each select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'a\']\">\n        <pz:metadata type=\"fulltext\">\n          <xsl:value-of select=\".\"/>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <!-- <xsl:if test=\"$fulltext_a\">\n	<pz:metadata type=\"fulltext\">\n	  <xsl:value-of select=\"$fulltext_a\"/>\n	</pz:metadata>\n      </xsl:if> -->\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'b\']\">\n        <pz:metadata type=\"fulltext\">\n          <xsl:value-of select=\".\"/>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <!-- <xsl:if test=\"$fulltext_b\">\n	<pz:metadata type=\"fulltext\">\n	  <xsl:value-of select=\"$fulltext_b\"/>\n	</pz:metadata>\n      </xsl:if> -->\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'907\' or @tag=\'901\']\">\n        <pz:metadata type=\"iii-id\">\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\n	</pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'926\']\">\n        <pz:metadata type=\"holding\">\n	  <xsl:for-each select=\"marc:subfield\">\n	    <xsl:if test=\"position() > 1\">\n	      <xsl:text> </xsl:text>\n	    </xsl:if>\n	    <xsl:value-of select=\".\"/>\n	  </xsl:for-each>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'948\']\">\n        <pz:metadata type=\"holding\">\n	  <xsl:for-each select=\"marc:subfield\">\n	    <xsl:if test=\"position() > 1\">\n	      <xsl:text> </xsl:text>\n	    </xsl:if>\n	    <xsl:value-of select=\".\"/>\n	  </xsl:for-each>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <xsl:for-each select=\"marc:datafield[@tag=\'991\']\">\n        <pz:metadata type=\"holding\">\n	  <xsl:for-each select=\"marc:subfield\">\n	    <xsl:if test=\"position() > 1\">\n	      <xsl:text> </xsl:text>\n	    </xsl:if>\n	    <xsl:value-of select=\".\"/>\n	  </xsl:for-each>\n        </pz:metadata>\n      </xsl:for-each>\n\n      <xsl:if test=\"$open_url_resolver\">\n        <pz:metadata type=\"open-url\">\n            <xsl:call-template name=\"insert-md-openurl\" />\n        </pz:metadata>\n      </xsl:if>\n\n      <!--passthrough id data-->\n      <xsl:for-each select=\"pz:metadata\">\n          <xsl:copy-of select=\".\"/>\n      </xsl:for-each>\n\n    </pz:record>    \n  </xsl:template>\n\n  \n  <xsl:template match=\"text()\"/>\n\n</xsl:stylesheet>',NULL,NULL,NULL,NULL,NULL),(3003,'BasicTransformationStep','<Description>',NULL,'Marc XML','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet\r\n    version=\"1.0\"\r\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n    xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\r\n    xmlns:marc=\"http://www.loc.gov/MARC21/slim\">\r\n\r\n  \r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\r\n\r\n<!-- Extract metadata from MARC21/USMARC \r\n      http://www.loc.gov/marc/bibliographic/ecbdhome.html\r\n-->  \r\n  <xsl:include href=\"pz2-ourl-marc21.xsl\" />\r\n\r\n  <xsl:template match=\"/\">\r\n    <pz:collection> \r\n      <xsl:apply-templates />\r\n    </pz:collection>\r\n  </xsl:template> 		       \r\n  \r\n  <xsl:template match=\"//delete\">\r\n	<xsl:copy-of select=\".\"/>                                                                                                                                                                               \r\n  </xsl:template> 		       \r\n  \r\n  <xsl:template match=\"//marc:record\">\r\n    <xsl:variable name=\"title_medium\" select=\"marc:datafield[@tag=\'245\']/marc:subfield[@code=\'h\']\"/>\r\n    <xsl:variable name=\"journal_title\" select=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'t\']\"/>\r\n    <xsl:variable name=\"electronic_location_url\" select=\"marc:datafield[@tag=\'856\']/marc:subfield[@code=\'u\']\"/>\r\n    <xsl:variable name=\"fulltext_a\" select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'a\']\"/>\r\n    <xsl:variable name=\"fulltext_b\" select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'b\']\"/>\r\n    <xsl:variable name=\"medium\">\r\n      <xsl:choose>\r\n	<xsl:when test=\"$title_medium\">\r\n	  <xsl:value-of select=\"substring-after(substring-before($title_medium,\']\'),\'[\')\"/>\r\n	</xsl:when>\r\n	<xsl:when test=\"$fulltext_a\">\r\n	  <xsl:text>electronic resource</xsl:text>\r\n	</xsl:when>\r\n	<xsl:when test=\"$fulltext_b\">\r\n	  <xsl:text>electronic resource</xsl:text>\r\n	</xsl:when>\r\n	<xsl:when test=\"$journal_title\">\r\n	  <xsl:text>article</xsl:text>\r\n	</xsl:when>\r\n	<xsl:otherwise>\r\n	  <xsl:text>book</xsl:text>\r\n	</xsl:otherwise>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <pz:record>      \r\n      <xsl:for-each select=\"marc:controlfield[@tag=\'001\']\">\r\n        <pz:metadata type=\"id\">\r\n          <xsl:value-of select=\".\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'010\']\">\r\n        <pz:metadata type=\"lccn\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'020\']\">\r\n        <pz:metadata type=\"isbn\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'022\']\">\r\n        <pz:metadata type=\"issn\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'027\']\">\r\n        <pz:metadata type=\"tech-rep-nr\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'035\']\">\r\n        <pz:metadata type=\"system-control-nr\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'100\']\">\r\n	<pz:metadata type=\"author\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"author-title\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"author-date\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'110\']\">\r\n	<pz:metadata type=\"corporate-name\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"corporate-location\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"corporate-date\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'111\']\">\r\n	<pz:metadata type=\"meeting-name\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"meeting-location\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"meeting-date\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\r\n	<pz:metadata type=\"date\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'245\']\">\r\n        <pz:metadata type=\"title\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-remainder\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-responsibility\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-dates\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'f\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-medium\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'h\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-number-section\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'n\']\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'250\']\">\r\n	<pz:metadata type=\"edition\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\r\n        <pz:metadata type=\"publication-place\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n        <pz:metadata type=\"publication-name\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\r\n	</pz:metadata>\r\n        <pz:metadata type=\"publication-date\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'300\']\">\r\n	<pz:metadata type=\"physical-extent\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-format\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-dimensions\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-accomp\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'e\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-unittype\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'f\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-unitsize\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'g\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-specified\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'3\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'440\']\">\r\n	<pz:metadata type=\"series-title\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag = \'500\' or @tag = \'505\' or\r\n      		@tag = \'518\' or @tag = \'520\' or @tag = \'522\']\">\r\n	<pz:metadata type=\"description\">\r\n            <xsl:value-of select=\"*/text()\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n      \r\n      <xsl:for-each select=\"marc:datafield[@tag=\'600\' or @tag=\'610\' or @tag=\'611\' or @tag=\'630\' or @tag=\'648\' or @tag=\'650\' or @tag=\'651\' or @tag=\'653\' or @tag=\'654\' or @tag=\'655\' or @tag=\'656\' or @tag=\'657\' or @tag=\'658\' or @tag=\'662\' or @tag=\'69X\']\">\r\n        <pz:metadata type=\"subject\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"subject-long\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text>, </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'856\']\">\r\n	<pz:metadata type=\"electronic-url\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'u\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"electronic-text\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'y\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"electronic-note\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'z\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'773\']\">\r\n        <pz:metadata type=\"citation\">\r\n          <xsl:for-each select=\"*\">\r\n            <xsl:value-of select=\"normalize-space(.)\"/>\r\n            <xsl:text> </xsl:text>\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n        <xsl:if test=\"marc:subfield[@code=\'t\']\">\r\n          <pz:metadata type=\"journal-title\">\r\n            <xsl:value-of select=\"marc:subfield[@code=\'t\']\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n        <xsl:if test=\"marc:subfield[@code=\'g\']\">\r\n          <pz:metadata type=\"journal-subpart\">\r\n            <xsl:value-of select=\"marc:subfield[@code=\'g\']\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n      </xsl:for-each>\r\n\r\n      <pz:metadata type=\"medium\">\r\n	<xsl:value-of select=\"$medium\"/>\r\n      </pz:metadata>\r\n      \r\n      <xsl:for-each select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'a\']\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- <xsl:if test=\"$fulltext_a\">\r\n	<pz:metadata type=\"fulltext\">\r\n	  <xsl:value-of select=\"$fulltext_a\"/>\r\n	</pz:metadata>\r\n      </xsl:if> -->\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'b\']\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- <xsl:if test=\"$fulltext_b\">\r\n	<pz:metadata type=\"fulltext\">\r\n	  <xsl:value-of select=\"$fulltext_b\"/>\r\n	</pz:metadata>\r\n      </xsl:if> -->\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'907\' or @tag=\'901\']\">\r\n        <pz:metadata type=\"iii-id\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'926\']\">\r\n        <pz:metadata type=\"holding\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text> </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'948\']\">\r\n        <pz:metadata type=\"holding\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text> </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'991\']\">\r\n        <pz:metadata type=\"holding\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text> </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:if test=\"$open_url_resolver\">\r\n        <pz:metadata type=\"open-url\">\r\n            <xsl:call-template name=\"insert-md-openurl\" />\r\n        </pz:metadata>\r\n      </xsl:if>\r\n\r\n      <!--passthrough id data-->\r\n      <xsl:for-each select=\"pz:metadata\">\r\n          <xsl:copy-of select=\".\"/>\r\n      </xsl:for-each>\r\n\r\n    </pz:record>    \r\n  </xsl:template>\r\n\r\n  \r\n  <xsl:template match=\"text()\"/>\r\n\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(3005,'BasicTransformationStep','<Description>',NULL,'Turbo Marc','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\"\r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\r\n  xmlns:tmarc=\"http://www.indexdata.com/turbomarc\">\r\n\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\"\r\n    encoding=\"UTF-8\" />\r\n  <xsl:param name=\"medium\"/>\r\n\r\n  <!-- Extract metadata from MARC21/USMARC from streamlined marcxml format \r\n    http://www.loc.gov/marc/bibliographic/ecbdhome.html -->\r\n  <xsl:template name=\"record-hook\" />\r\n\r\n\r\n  <xsl:template match=\"/\">\r\n      <xsl:apply-templates />\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"tmarc:collection\">\r\n    <collection>\r\n      <xsl:apply-templates />\r\n    </collection>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"tmarc:r\">\r\n    <xsl:variable name=\"title_medium\" select=\"tmarc:d245/tmarc:sh\" />\r\n    <xsl:variable name=\"journal_title\" select=\"tmarc:d773/tmarc:st\" />\r\n    <xsl:variable name=\"electronic_location_url\" select=\"tmarc:d856/tmarc:su\" />\r\n    <xsl:variable name=\"fulltext_a\" select=\"tmarc:d900/tmarc:sa\" />\r\n    <xsl:variable name=\"fulltext_b\" select=\"tmarc:d900/tmarc:sb\" />\r\n    <!-- Does not always hit the right substring. The field is not always fixed-width? -->\r\n    <xsl:variable name=\"control_lang\" select=\"substring(tmarc:c008, 36, 3)\" />\r\n    <xsl:variable name=\"contains110\" select=\"tmarc:d110\" />\r\n    <xsl:variable name=\"hasAuthorFields\" select=\"tmarc:d100 or tmarc:d111\" />\r\n    <xsl:variable name=\"typeofrec\" select=\"substring(tmarc:l, 7, 1)\"/>\r\n    <xsl:variable name=\"typeofvm\" select=\"substring(tmarc:c008, 34, 1)\"/>\r\n    <xsl:variable name=\"biblevel\" select=\"substring(tmarc:l, 8, 1)\"/>\r\n    <xsl:variable name=\"physdes\" select=\"substring(tmarc:c007, 1, 1)\"/>\r\n    <xsl:variable name=\"form1\" select=\"substring(tmarc:c008, 24, 1)\"/>\r\n    <xsl:variable name=\"form2\" select=\"substring(tmarc:c008, 30, 1)\"/>\r\n    <xsl:variable name=\"oclca\" select=\"substring(tmarc:c007, 1, 1)\"/>\r\n    <xsl:variable name=\"oclcb\" select=\"substring(tmarc:c007, 2, 1)\"/>\r\n    <xsl:variable name=\"oclcd\" select=\"substring(tmarc:c007, 4, 1)\"/>\r\n    <xsl:variable name=\"oclce\" select=\"substring(tmarc:c007, 5, 1)\"/>\r\n    <xsl:variable name=\"typeofserial\" select=\"substring(tmarc:c008, 22, 1)\"/>\r\n\r\n    <xsl:variable name=\"electronic\">\r\n      <xsl:choose>\r\n        <xsl:when test=\"$form1=\'s\' or $form1=\'q\' or $form1=\'o\' or\r\n	   $form2=\'s\' or $form2=\'q\' or $form2=\'o\'\">\r\n	   <xsl:text>yes</xsl:text>\r\n	</xsl:when>\r\n	<xsl:otherwise/>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"vmedium\">\r\n      <xsl:choose>\r\n        <xsl:when test=\"string-length($medium)\"><xsl:value-of select=\"$medium\" /></xsl:when>\r\n        <xsl:when test=\"($typeofrec=\'a\' or $typeofrec=\'t\') and $biblevel=\'m\'\">book</xsl:when>\r\n        <xsl:when test=\"$typeofrec=\'j\' or $typeofrec=\'i\'\">\r\n	  <xsl:text>recording</xsl:text>\r\n	  <xsl:choose>\r\n	    <xsl:when test=\"$oclcb=\'d\' and $oclcd=\'f\'\">-cd</xsl:when>\r\n	    <xsl:when test=\"$oclcb=\'s\'\">-cassette</xsl:when>\r\n	    <xsl:when test=\"$oclcb=\'d\' and $oclcd=\'a\' or $oclcd=\'b\' or\r\n	      $oclcd=\'c\' or $oclcd=\'d\' or $oclcd=\'e\'\">-vinyl</xsl:when>\r\n	  </xsl:choose>\r\n	</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'g\'\">\r\n	  <xsl:choose>\r\n	    <xsl:when test=\"$typeofvm=\'m\' or $typeofvm=\'v\'\">\r\n	      <xsl:text>video</xsl:text>\r\n	      <xsl:choose>\r\n	        <xsl:when test=\"$oclca=\'v\' and $oclcb=\'d\' and $oclce=\'v\'\">-dvd</xsl:when>\r\n	        <xsl:when test=\"$oclca=\'v\' and $oclcb=\'d\' and $oclce=\'s\'\">-blu-ray</xsl:when>\r\n	        <xsl:when test=\"$oclca=\'v\' and $oclcb=\'f\' and $oclce=\'b\'\">-vhs</xsl:when>\r\n	      </xsl:choose>\r\n	    </xsl:when>\r\n	    <xsl:otherwise>audio-visual</xsl:otherwise>\r\n	  </xsl:choose>\r\n	</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'a\' and $biblevel=\'s\'\">\r\n	  <xsl:choose>\r\n	    <xsl:when test=\"$typeofserial=\'n\'\">newspaper</xsl:when>\r\n	    <xsl:otherwise>journal</xsl:otherwise>\r\n	  </xsl:choose>\r\n	</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'e\' or $typeofrec=\'f\'\">map</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'c\' or $typeofrec=\'d\'\">music-score</xsl:when>\r\n	<xsl:when test=\"$form1=\'a\' or $form1=\'b\' or $form1=\'c\'\">microform</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'t\'\">thesis</xsl:when>\r\n        <!-- <xsl:when test=\"$journal_title\">article</xsl:when> -->\r\n	<xsl:when test=\"$typeofrec=\'a\' or $typeofrec=\'i\' and\r\n	    ($typeofserial=\'d\' or $typeofserial=\'w\')\">web</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'a\' and $biblevel=\'b\'\">article</xsl:when>\r\n	<xsl:when test=\"$typeofrec=\'m\'\">electronic</xsl:when>\r\n        <xsl:when test=\"$title_medium\">\r\n          <xsl:value-of select=\"translate($title_medium, \' []/:\', \'\')\" />\r\n        </xsl:when>\r\n        <xsl:otherwise>\r\n          <xsl:text>other</xsl:text>\r\n        </xsl:otherwise>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"has_fulltext\">\r\n      <xsl:choose>\r\n        <xsl:when test=\"tmarc:d856/tmarc:sq\">\r\n          <xsl:text>yes</xsl:text>\r\n        </xsl:when>\r\n        <xsl:when test=\"tmarc:d856/tmarc:si=\'TEXT*\'\">\r\n          <xsl:text>yes</xsl:text>\r\n        </xsl:when>\r\n        <xsl:otherwise>\r\n          <xsl:text>no</xsl:text>\r\n        </xsl:otherwise>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"oclc_number\">\r\n      <xsl:choose>\r\n        <xsl:when test=\'contains(tmarc:c001,\"ocn\") or\r\n                        contains(tmarc:c001,\"ocm\") or\r\n                        contains(tmarc:c001,\"OCoLC\") \'>\r\n         <xsl:value-of select=\"tmarc:c001\"/>\r\n        </xsl:when>\r\n        <xsl:when test=\'contains(tmarc:d035/tmarc:sa,\"ocn\") or\r\n                        contains(tmarc:d035/tmarc:sa,\"ocm\") or\r\n                        contains(tmarc:d035/tmarc:sa,\"OCoLC\") \'>\r\n         <xsl:value-of select=\"tmarc:d035/tmarc:sa\"/>\r\n        </xsl:when>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"date_008\">\r\n      <xsl:choose>\r\n        <xsl:when test=\"contains(\'cestpudikmr\', substring(tmarc:c008, 7, 1))\">\r\n          <xsl:value-of select=\"substring(tmarc:c008, 8, 4)\" />\r\n        </xsl:when>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"date_end_008\">\r\n      <xsl:choose>\r\n        <xsl:when test=\"contains(\'dikmr\', substring(tmarc:c008, 7, 1))\">\r\n          <xsl:value-of select=\"substring(tmarc:c008, 12, 4)\" />\r\n        </xsl:when>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <pz:record>\r\n<!--\r\n      <xsl:attribute name=\"mergekey\">\r\n    <xsl:text>title </xsl:text>\r\n  <xsl:value-of select=\"tmarc:d245/tmarc:sa\" />\r\n  <xsl:text> author </xsl:text>\r\n  <xsl:value-of select=\"tmarc:d100/tmarc:sa\" />\r\n  <xsl:text> medium </xsl:text>\r\n  <xsl:value-of select=\"$medium\" />\r\n    </xsl:attribute>\r\n  -->\r\n\r\n      <xsl:for-each select=\"tmarc:c001\">\r\n        <pz:metadata type=\"id\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <pz:metadata type=\"oclc-number\">\r\n        <xsl:value-of select=\"$oclc_number\" />\r\n      </pz:metadata>\r\n\r\n      <xsl:for-each select=\"tmarc:d010\">\r\n        <pz:metadata type=\"lccn\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d020\">\r\n        <pz:metadata type=\"isbn\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d022\">\r\n        <pz:metadata type=\"issn\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d027\">\r\n        <pz:metadata type=\"tech-rep-nr\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d035\"> \r\n        <pz:metadata type=\"system-control-nr\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"tmarc:sa\">\r\n              <xsl:value-of select=\"tmarc:sa\"/>\r\n            </xsl:when>\r\n            <xsl:otherwise>\r\n              <xsl:value-of select=\"tmarc:sb\"/>\r\n            </xsl:otherwise>\r\n          </xsl:choose>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d100\">\r\n        <pz:metadata type=\"author\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"author-title\">\r\n          <xsl:value-of select=\"tmarc:sc\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"author-date\">\r\n          <xsl:value-of select=\"tmarc:sd\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d110\">\r\n        <pz:metadata type=\"corporate-name\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"corporate-location\">\r\n          <xsl:value-of select=\"tmarc:sc\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"corporate-date\">\r\n          <xsl:value-of select=\"tmarc:sd\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d111\">\r\n        <pz:metadata type=\"meeting-name\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"meeting-location\">\r\n          <xsl:value-of select=\"tmarc:sc\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"meeting-date\">\r\n          <xsl:value-of select=\"tmarc:sd\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d260\">\r\n        <pz:metadata type=\"date\">\r\n          <xsl:value-of select=\"translate(tmarc:sc, \'cp[].\', \'\')\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:if test=\"$date_008 and not(tmarc:d260)\">\r\n        <pz:metadata type=\"date\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"$date_end_008\">\r\n              <xsl:value-of select=\"concat($date_008,\'-\',$date_end_008)\" />\r\n            </xsl:when>\r\n            <xsl:otherwise> \r\n              <xsl:value-of select=\"$date_008\" />\r\n            </xsl:otherwise>\r\n          </xsl:choose>\r\n        </pz:metadata>\r\n      </xsl:if>\r\n\r\n\r\n      <xsl:for-each select=\"tmarc:d130\">\r\n        <pz:metadata type=\"title-uniform\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-uniform-media\">\r\n          <xsl:value-of select=\"tmarc:sm\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-uniform-parts\">\r\n          <xsl:value-of select=\"tmarc:sn\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-uniform-partname\">\r\n          <xsl:value-of select=\"tmarc:sp\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-uniform-key\">\r\n          <xsl:value-of select=\"tmarc:sr\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d245\">\r\n        <pz:metadata type=\"title\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-remainder\">\r\n          <xsl:value-of select=\"tmarc:sb\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-responsibility\">\r\n          <xsl:value-of select=\"tmarc:sc\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-dates\">\r\n          <xsl:value-of select=\"tmarc:sf\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-medium\">\r\n          <xsl:value-of select=\"tmarc:sh\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-number-section\">\r\n          <xsl:value-of select=\"tmarc:sn\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-complete\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n          <xsl:if test=\"tmarc:sb\" ><xsl:value-of select=\"concat(\' \', tmarc:sb)\" /></xsl:if>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d250\">\r\n        <pz:metadata type=\"edition\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d260\">\r\n        <pz:metadata type=\"publication-place\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"publication-name\">\r\n          <xsl:value-of select=\"tmarc:sb\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"publication-date\">\r\n          <xsl:value-of select=\"tmarc:sc\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d300\">\r\n        <pz:metadata type=\"physical-extent\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"physical-format\">\r\n          <xsl:value-of select=\"tmarc:sb\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"physical-dimensions\">\r\n          <xsl:value-of select=\"tmarc:sc\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"physical-accomp\">\r\n          <xsl:value-of select=\"tmarc:se\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"physical-unittype\">\r\n          <xsl:value-of select=\"tmarc:sf\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"physical-unitsize\">\r\n          <xsl:value-of select=\"tmarc:sg\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"physical-specified\">\r\n          <xsl:value-of select=\"tmarc:s3\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d440\">\r\n        <pz:metadata type=\"series-title\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d500\">\r\n        <pz:metadata type=\"description\">\r\n          <xsl:for-each select=\"node()\">\r\n            <xsl:value-of select=\"text()\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d505\">\r\n        <pz:metadata type=\"description\">\r\n          <xsl:for-each select=\"node()\">\r\n            <xsl:value-of select=\"text()\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d518\">\r\n        <pz:metadata type=\"description\">\r\n          <xsl:for-each select=\"node()\">\r\n            <xsl:value-of select=\"text()\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d520\">\r\n        <pz:metadata type=\"description\">\r\n          <xsl:for-each select=\"node()\">\r\n            <xsl:value-of select=\"text()\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d522\">\r\n        <pz:metadata type=\"description\">\r\n          <xsl:for-each select=\"node()\">\r\n            <xsl:value-of select=\"text()\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d911\">\r\n        <pz:metadata type=\"description\">\r\n          <xsl:for-each select=\"node()\">\r\n            <xsl:value-of select=\"text()\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d600\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d610\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d611\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d630\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d648\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d650\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d651\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d653\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d654\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d655\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d656\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d657\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d658\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d662\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d69X\">\r\n        <pz:metadata type=\"subject\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"subject-long\">\r\n          <xsl:for-each select=\"node()/text()\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text>, </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- or tmarc:d651 or tmarc:d653 or tmarc:d654 or tmarc:d655 or tmarc:d656 \r\n        or tmarc:d657 or tmarc:d658 or tmarc:d662 or tmarc:d69X\"> -->\r\n\r\n      <!-- <xsl:for-each select=\"tmarc:d600\" > <pz:metadata type=\"subject\"> \r\n        <xsl:value-of select=\"tmarc:sa\"/> </pz:metadata> <pz:metadata type=\"subject-long\"> \r\n        <xsl:for-each select=\"tmarc:sa tmarc:sb tmarc:sc tmarc:sd \"> <xsl:if test=\"position() \r\n        > 1\"> <xsl:text>, </xsl:text> </xsl:if> <xsl:value-of select=\".\"/> </xsl:for-each> \r\n        </pz:metadata> </xsl:for-each> -->\r\n\r\n      <xsl:for-each select=\"tmarc:d856\">\r\n        <pz:metadata type=\"electronic-url\">\r\n          <xsl:value-of select=\"tmarc:su\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"electronic-text\">\r\n          <xsl:choose>\r\n	    <xsl:when test=\"tmarc:sy\">\r\n	      <xsl:value-of select=\"tmarc:sy/text()\" />\r\n	    </xsl:when>\r\n	    <xsl:when test=\"tmarc:s3\">\r\n	      <xsl:value-of select=\"tmarc:s3/text()\" />\r\n	    </xsl:when>\r\n	     <xsl:otherwise>Get resource</xsl:otherwise>\r\n	   </xsl:choose>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"electronic-note\">\r\n          <xsl:value-of select=\"tmarc:sz\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"electronic-format-instruction\">\r\n          <xsl:value-of select=\"tmarc:si\" />\r\n        </pz:metadata>\r\n        <pz:metadata type=\"electronic-format-type\">\r\n          <xsl:value-of select=\"tmarc:sq\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d773\">\r\n        <pz:metadata type=\"citation\">\r\n          <xsl:for-each select=\"*\">\r\n            <xsl:value-of select=\"normalize-space(.)\" />\r\n            <xsl:text> </xsl:text>\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n        <xsl:if test=\"tmarc:st\">\r\n          <pz:metadata type=\"journal-title\">\r\n            <xsl:value-of select=\"tmarc:st\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n        <xsl:if test=\"tmarc:sg\">\r\n          <pz:metadata type=\"journal-subpart\">\r\n            <xsl:value-of select=\"tmarc:sg\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n        <xsl:if test=\"tmarc:sp\">\r\n          <pz:metadata type=\"journal-title-abbrev\">\r\n            <xsl:value-of select=\"tmarc:sp\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d852\">\r\n        <xsl:if test=\"tmarc:sy\">\r\n          <pz:metadata type=\"publicnote\">\r\n            <xsl:value-of select=\"tmarc:sy\" />\r\n          </pz:metadata>\r\n        </xsl:if>\r\n        <xsl:if test=\"tmarc:sh\">\r\n          <pz:metadata type=\"callnumber\">\r\n            <xsl:value-of select=\"tmarc:sh\" />\r\n          </pz:metadata>\r\n        </xsl:if>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d876\">\r\n        <xsl:if test=\"tmarc:sf\">\r\n          <pz:metadata type=\"loan-period\">\r\n            <xsl:value-of select=\"tmarc:sf\" />\r\n          </pz:metadata>\r\n        </xsl:if>\r\n      </xsl:for-each>\r\n\r\n      <pz:metadata type=\"medium\">\r\n        <xsl:value-of select=\"$vmedium\" />\r\n	<xsl:if test=\"string-length($electronic) and $vmedium != \'electronic\'\">\r\n	  <xsl:text> (electronic)</xsl:text>\r\n	</xsl:if>\r\n      </pz:metadata>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:sa\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- <xsl:if test=\"$fulltext_a\"> <pz:metadata type=\"fulltext\"> <xsl:value-of \r\n        select=\"$fulltext_a\"/> </pz:metadata> </xsl:if> -->\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:sb\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:se\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:sf\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:si\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:sk\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:sq\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:ss\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:su\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d900/tmarc:sy\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n\r\n      <!-- <xsl:if test=\"$fulltext_b\"> <pz:metadata type=\"fulltext\"> <xsl:value-of \r\n        select=\"$fulltext_b\"/> </pz:metadata> </xsl:if> -->\r\n\r\n      <pz:metadata type=\"has-fulltext\">\r\n        <xsl:value-of select=\"$has_fulltext\"/>\r\n      </pz:metadata>\r\n\r\n      <xsl:for-each select=\"tmarc:d907 | tmarc:d901\">\r\n        <pz:metadata type=\"iii-id\">\r\n          <xsl:value-of select=\"tmarc:sa\" />\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d926\">\r\n        <pz:metadata type=\"locallocation\">\r\n	  <xsl:choose><xsl:when test=\"tmarc:sa\">\r\n	    <xsl:value-of select=\"tmarc:sa\"/>\r\n	  </xsl:when><xsl:otherwise>\r\n	    <xsl:text>PAZPAR2_NULL_VALUE</xsl:text>\r\n	  </xsl:otherwise></xsl:choose>\r\n	</pz:metadata>\r\n        <pz:metadata type=\"callnumber\">\r\n	  <xsl:choose><xsl:when test=\"tmarc:sc\">\r\n	    <xsl:value-of select=\"tmarc:sc\"/>\r\n	  </xsl:when><xsl:otherwise>\r\n	    <xsl:text>PAZPAR2_NULL_VALUE</xsl:text>\r\n	  </xsl:otherwise></xsl:choose>\r\n	</pz:metadata>\r\n        <pz:metadata type=\"available\">\r\n	  <xsl:choose><xsl:when test=\"tmarc:se\">\r\n	    <xsl:value-of select=\"tmarc:se\"/>\r\n	  </xsl:when><xsl:otherwise>\r\n	    <xsl:text>PAZPAR2_NULL_VALUE</xsl:text>\r\n	  </xsl:otherwise></xsl:choose>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- OhioLINK holdings -->\r\n      <xsl:for-each select=\"tmarc:d945\">\r\n	<pz:metadata type=\"locallocation\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"tmarc:sa\">\r\n              <xsl:value-of select=\"tmarc:sa\"/>\r\n            </xsl:when>\r\n            <xsl:otherwise>PAZPAR2_NULL_VALUE</xsl:otherwise>\r\n          </xsl:choose>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"callnumber\">\r\n          <xsl:choose>\r\n	    <xsl:when test=\"tmarc:sb\">\r\n              <xsl:value-of select=\"tmarc:sb\"/>\r\n            </xsl:when>\r\n            <xsl:otherwise>PAZPAR2_NULL_VALUE</xsl:otherwise>\r\n          </xsl:choose>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"publicnote\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"tmarc:sc\">\r\n              <xsl:value-of select=\"tmarc:sc\"/>\r\n            </xsl:when>\r\n            <xsl:otherwise>PAZPAR2_NULL_VALUE</xsl:otherwise>\r\n          </xsl:choose>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"available\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"tmarc:ss = \'N\'\">Available</xsl:when>\r\n            <xsl:when test=\"tmarc:ss != \'N\'\">\r\n              <xsl:choose>\r\n		<xsl:when test=\"tmarc:sd\">\r\n                  <xsl:value-of select=\"tmarc:sd\"/>\r\n		</xsl:when>\r\n		<xsl:otherwise>PAZPAR2_NULL_VALUE</xsl:otherwise>\r\n              </xsl:choose>\r\n            </xsl:when>\r\n            <xsl:otherwise>PAZPAR2_NULL_VALUE</xsl:otherwise>\r\n          </xsl:choose>\r\n	</pz:metadata>      \r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d948\">\r\n        <pz:metadata type=\"holding\">\r\n          <xsl:for-each select=\"tmarc:s\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text> </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d991\">\r\n        <pz:metadata type=\"holding\">\r\n          <xsl:for-each select=\"tmarc:s\">\r\n            <xsl:if test=\"position() > 1\">\r\n              <xsl:text> </xsl:text>\r\n            </xsl:if>\r\n            <xsl:value-of select=\".\" />\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"tmarc:d999\">\r\n        <pz:metadata type=\"localid\">\r\n          <xsl:choose>\r\n            <xsl:when test=\"tmarc:sa\">\r\n              <xsl:value-of select=\"tmarc:sa\"/>\r\n            </xsl:when>\r\n            <xsl:when test=\"tmarc:sc\">\r\n              <xsl:value-of select=\"tmarc:sc\"/>\r\n            </xsl:when> \r\n            <xsl:otherwise>\r\n              <xsl:value-of select=\"tmarc:sd\"/>\r\n            </xsl:otherwise>\r\n          </xsl:choose>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n\r\n      <!-- passthrough id data -->\r\n      <xsl:for-each select=\"pz:metadata\">\r\n        <xsl:copy-of select=\".\" />\r\n      </xsl:for-each>\r\n\r\n      <!-- other stylesheets importing this might want to define this -->\r\n	<xsl:call-template name=\"record-hook\" />\r\n\r\n    </pz:record>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"text()\" />\r\n\r\n  <!-- TODO Does not work anymore -->\r\n  <xsl:template name=\"shortTitle\">\r\n    <xsl:param name=\"tag\" />\r\n    <xsl:for-each select=\"tmarc:d\">\r\n      <xsl:value-of select=\"tmarc:sa\" />\r\n      <xsl:value-of select=\"tmarc:sm\" />\r\n      <xsl:value-of select=\"tmarc:sn\" />\r\n      <xsl:value-of select=\"tmarc:sp\" />\r\n      <xsl:value-of select=\"tmarc:sr\" />\r\n    </xsl:for-each>\r\n  </xsl:template>\r\n\r\n  <!-- No working as expected -->\r\n  <xsl:template name=\"description\">\r\n    <xsl:param name=\"element\" />\r\n    <xsl:for-each select=\"$element\">\r\n      <pz:metadata type=\"description\">\r\n        <xsl:for-each select=\"node()\">\r\n          <xsl:value-of select=\"text()\" />\r\n        </xsl:for-each>\r\n      </pz:metadata>\r\n    </xsl:for-each>\r\n    <xsl:apply-templates />\r\n  </xsl:template>\r\n\r\n  <!-- <xsl:for-each select=\"tmarc:d500\"> <pz:metadata type=\"description\"> \r\n    <xsl:for-each select=\"node()\"> <xsl:value-of select=\"text()\"/> </xsl:for-each> \r\n    </pz:metadata> </xsl:for-each> -->\r\n\r\n  <xsl:template name=\"subject\">\r\n    <xsl:param name=\"element\" />\r\n    <xsl:for-each select=\"$element\">\r\n      <pz:metadata type=\"subject\">\r\n        <xsl:value-of select=\"tmarc:sa\" />\r\n      </pz:metadata>\r\n      <pz:metadata type=\"subject-long\">\r\n        <xsl:for-each select=\"node()/text()\">\r\n          <xsl:if test=\"position() > 1\">\r\n            <xsl:text>, </xsl:text>\r\n          </xsl:if>\r\n          <xsl:value-of select=\".\" />\r\n        </xsl:for-each>\r\n      </pz:metadata>\r\n    </xsl:for-each>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(3153,'BasicTransformationStep','<Description>',NULL,'GPDC to MARC21','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\" \r\n		xmlns:dc=\"http://purl.org/dc/elements/1.1/\" \r\n		xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n		xmlns=\"http://www.loc.gov/MARC21/slim\" \r\n		xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" exclude-result-prefixes=\"dc\" \r\n		xmlns:pgterms=\"http://www.gutenberg.org/rdfterms/\">\r\n    <xsl:output method=\"xml\" indent=\"yes\"/>\r\n    <xsl:strip-space elements=\"pgterms:file\"/>\r\n    <xsl:template match=\"/\">\r\n      <collection>\r\n	<xsl:apply-templates />\r\n      </collection>\r\n    </xsl:template>\r\n    <xsl:template match=\"rdf:Description\">\r\n      <xsl:comment>\r\n	<xsl:value-of select=\".\" />\r\n      </xsl:comment>\r\n    </xsl:template>\r\n    <xsl:template match=\"pgterms:etext\">\r\n        <record>\r\n            <xsl:element name=\"leader\">\r\n                <xsl:variable name=\"type\" select=\"dc:type\"/>\r\n                <xsl:variable name=\"leader06\">\r\n                    <xsl:choose>\r\n                        <xsl:when test=\"$type=\'collection\'\">p</xsl:when>\r\n                        <xsl:when test=\"$type=\'dataset\'\">m</xsl:when>\r\n                        <xsl:when test=\"$type=\'event\'\">r</xsl:when>\r\n                        <xsl:when test=\"$type=\'image\'\">k</xsl:when>\r\n                        <xsl:when test=\"$type=\'interactive resource\'\">m</xsl:when>\r\n                        <xsl:when test=\"$type=\'service\'\">m</xsl:when>\r\n                        <xsl:when test=\"$type=\'software\'\">m</xsl:when>\r\n                        <xsl:when test=\"$type=\'sound\'\">i</xsl:when>\r\n                        <xsl:when test=\"$type=\'text\'\">a</xsl:when>\r\n                        <xsl:otherwise>a</xsl:otherwise>\r\n                    </xsl:choose>\r\n                </xsl:variable>\r\n                <xsl:variable name=\"leader07\">\r\n                    <xsl:choose>\r\n                        <xsl:when test=\"$type=\'collection\'\">c</xsl:when>\r\n                        <xsl:otherwise>m</xsl:otherwise>\r\n                    </xsl:choose>\r\n                </xsl:variable>\r\n                <xsl:value-of select=\"concat(\'      \',$leader06,$leader07,\'         3u     \')\"/>\r\n            </xsl:element>\r\n	    <controlfield tag=\"001\">\r\n	      <xsl:value-of select=\"substring(@rdf:ID, 6)\"/>\r\n	    </controlfield>\r\n	    <datafield tag=\"856\" ind1=\"0\" ind2=\"0\">\r\n	      <subfield code=\"u\">http://www.gutenberg.org/ebooks/<xsl:value-of select=\"substring(@rdf:ID, 6)\"/></subfield>\r\n	    </datafield>\r\n\r\n            <xsl:for-each select=\"dc:contributer\">\r\n                <datafield tag=\"720\" ind1=\"0\" ind2=\"0\">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                    <subfield code=\"e\">collaborator</subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:coverage\">\r\n                <datafield tag=\"500\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:creator\">\r\n                <datafield tag=\"100\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n<!--\r\n                    <subfield code=\"e\">author</subfield>\r\n-->\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:date\">\r\n                <datafield tag=\"260\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"c\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>    \r\n\r\n            <xsl:for-each select=\"dc:description\">\r\n                <datafield tag=\"520\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:identifier\">\r\n                <datafield tag=\"856\" ind1=\"4\" ind2=\"0\">\r\n                    <subfield code=\"u\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n		    <xsl:if test=\"dc:format\">\r\n		      <subfield code=\"q\">\r\n		        <xsl:value-of select=\"dc:format\"/>\r\n		      </subfield>\r\n		    </xsl:if>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:language\">\r\n                <datafield tag=\"546\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:publisher\">\r\n                <datafield tag=\"260\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"b\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:relation\">\r\n                <datafield tag=\"787\" ind1=\"0\" ind2=\" \">\r\n                    <subfield code=\"n\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:rights\">\r\n                <datafield tag=\"540\" ind1=\" \" ind2=\" \">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:source\">\r\n                <datafield tag=\"786\" ind1=\"0\" ind2=\" \">\r\n                    <subfield code=\"n\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <datafield tag=\"650\" ind1=\" \" ind2=\" \">\r\n	      <xsl:for-each select=\"dc:subject\">\r\n<!--		    <xsl:for-each select=\"tokenize(.,\';|- -\')\"> -->\r\n		      <subfield code=\"a\"><xsl:value-of select=\"normalize-space(.)\" /></subfield>\r\n<!--		    </xsl:for-each> -->\r\n              </xsl:for-each>\r\n	    </datafield>\r\n\r\n            <xsl:for-each select=\"dc:title[1]\">\r\n                <datafield tag=\"245\" ind1=\"0\" ind2=\"0\">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:title[position()>1]\">\r\n                <datafield tag=\"246\" ind1=\"3\" ind2=\"3\"><subfield code=\"a\"><xsl:value-of select=\".\"/></subfield></datafield>\r\n            </xsl:for-each>\r\n\r\n            <xsl:for-each select=\"dc:type\">\r\n                <datafield tag=\"655\" ind1=\"7\" ind2=\" \">\r\n                    <subfield code=\"a\">\r\n                        <xsl:value-of select=\".\"/>\r\n                    </subfield>\r\n                    <subfield code=\"2\">local</subfield>\r\n                </datafield>\r\n            </xsl:for-each>\r\n        </record>\r\n    </xsl:template>\r\n  <!-- Ignore other elements by mapping into empty DOM XML trees -->\r\n<!--\r\n  <xsl:template match=\"/*\"/>\r\n-->\r\n  <xsl:template match=\"pgterms:file\" />\r\n\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(3155,'BasicTransformationStep','<Description>',NULL,'DC to MARC21 (slim)','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns=\"http://www.loc.gov/MARC21/slim\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" exclude-result-prefixes=\"dc\">\r\n	<xsl:output method=\"xml\" indent=\"yes\"/>\r\n	\r\n	<xsl:template match=\"/\">\r\n		<record xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd\" >\r\n			<xsl:element name=\"leader\">\r\n				<xsl:variable name=\"type\" select=\"dc:type\"/>\r\n				<xsl:variable name=\"leader06\">\r\n					<xsl:choose>\r\n						<xsl:when test=\"$type=\'collection\'\">p</xsl:when>\r\n						<xsl:when test=\"$type=\'dataset\'\">m</xsl:when>\r\n						<xsl:when test=\"$type=\'event\'\">r</xsl:when>\r\n						<xsl:when test=\"$type=\'image\'\">k</xsl:when>\r\n						<xsl:when test=\"$type=\'interactive resource\'\">m</xsl:when>\r\n						<xsl:when test=\"$type=\'service\'\">m</xsl:when>\r\n						<xsl:when test=\"$type=\'software\'\">m</xsl:when>\r\n						<xsl:when test=\"$type=\'sound\'\">i</xsl:when>\r\n						<xsl:when test=\"$type=\'text\'\">a</xsl:when>\r\n						<xsl:otherwise>a</xsl:otherwise>\r\n					</xsl:choose>\r\n				</xsl:variable>\r\n				<xsl:variable name=\"leader07\">\r\n					<xsl:choose>\r\n						<xsl:when test=\"$type=\'collection\'\">c</xsl:when>\r\n						<xsl:otherwise>m</xsl:otherwise>\r\n					</xsl:choose>\r\n				</xsl:variable>\r\n				<xsl:value-of select=\"concat(\'      \',$leader06,$leader07,\'         3u     \')\"/>\r\n			</xsl:element>\r\n\r\n			<datafield tag=\"042\" ind1=\" \" ind2=\" \">\r\n				<subfield code=\"a\">dc</subfield>\r\n			</datafield>\r\n\r\n			<xsl:for-each select=\"//dc:contributer\">\r\n				<datafield tag=\"720\" ind1=\"0\" ind2=\"0\">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n					<subfield code=\"e\">collaborator</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:coverage\">\r\n				<datafield tag=\"500\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:creator\">\r\n				<datafield tag=\"720\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n					<subfield code=\"e\">author</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:date\">\r\n				<datafield tag=\"260\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"c\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>	\r\n\r\n			<xsl:for-each select=\"//dc:description\">\r\n				<datafield tag=\"520\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n			\r\n			<xsl:for-each select=\"//dc:format\">\r\n				<datafield tag=\"856\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"q\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:identifier\">\r\n				<datafield tag=\"024\" ind1=\"8\" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:language\">\r\n				<datafield tag=\"546\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n			\r\n			<xsl:for-each select=\"//dc:publisher\">\r\n				<datafield tag=\"260\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"b\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:relation\">\r\n				<datafield tag=\"787\" ind1=\"0\" ind2=\" \">\r\n					<subfield code=\"n\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:rights\">\r\n				<datafield tag=\"540\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:source\">\r\n				<datafield tag=\"786\" ind1=\"0\" ind2=\" \">\r\n					<subfield code=\"n\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:subject\">\r\n				<datafield tag=\"653\" ind1=\" \" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n																							\r\n			<xsl:for-each select=\"//dc:title[1]\">\r\n				<datafield tag=\"245\" ind1=\"0\" ind2=\"0\">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:title[position()>1]\">\r\n				<datafield tag=\"246\" ind1=\"3\" ind2=\"3\">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n\r\n			<xsl:for-each select=\"//dc:type\">\r\n				<datafield tag=\"655\" ind1=\"7\" ind2=\" \">\r\n					<subfield code=\"a\">\r\n						<xsl:value-of select=\".\"/>\r\n					</subfield>\r\n					<subfield code=\"2\">local</subfield>\r\n				</datafield>\r\n			</xsl:for-each>\r\n		</record>\r\n	</xsl:template>\r\n</xsl:stylesheet>',NULL,NULL,NULL,NULL,NULL),(3653,'BasicTransformationStep','<Description>',NULL,'Wiki Abstract 2 PZ','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n                xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\" version=\"1.0\" >\r\n		\r\n  <xsl:output method=\"xml\" indent=\"yes\" />\r\n  <xsl:template match=\"/\">\r\n    <collection>\r\n      <xsl:apply-templates />\r\n      </collection>\r\n    </xsl:template>\r\n    <xsl:template match=\"feed\">\r\n            <xsl:apply-templates />\r\n    </xsl:template>\r\n    <xsl:template match=\"doc\">\r\n      <pz:record>\r\n	<pz:metadata type=\"id\">\r\n	  <xsl:value-of select=\"substring-after(url,\'http://\')\" />\r\n	  </pz:metadata>\r\n	<pz:metadata type=\"title\">\r\n	  <xsl:value-of select=\"substring-after(title, \'Wikipedia: \')\" />\r\n	  </pz:metadata>\r\n	<!-- <field name=\"title-abbreviated\"> <xsl:value-of select=\"substring-before(substring-after(concat(title, \r\n	     \' (\'), \'Wikipedia: \'), \' (\')\"/> </field> -->\r\n	<!-- <field name=\"date\"> <xsl:value-of select=\"date\" /> </field> -->\r\n	<pz:metadata type=\"description\">\r\n	  <xsl:value-of select=\"abstract\" />\r\n	  </pz:metadata>\r\n	<pz:metadata type=\"electronic-url\">\r\n	  <xsl:value-of select=\"url\" />\r\n	  </pz:metadata>\r\n	</pz:record>\r\n      </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4053,'BasicTransformationStep','<Description>',NULL,'Marc21 to PZ2 (full)','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet\r\n    version=\"1.0\"\r\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n    xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\r\n    xmlns:marc=\"http://www.loc.gov/MARC21/slim\"\r\n    xmlns:str=\"http://exslt.org/strings\"\r\n    extension-element-prefixes=\"str\">\r\n\r\n  <xsl:param name=\"open_url_resolver\"/>\r\n  <!--<xsl:variable name=\"resolver\">http://zeus.lib.uoc.gr:3210/sfxtst3</xsl:variable>-->\r\n \r\n  <xsl:template name=\"insert-md-openurl\">\r\n  \r\n    <xsl:value-of select=\"$open_url_resolver\" /><xsl:text>?generatedby=pz2</xsl:text>\r\n    <xsl:call-template name=\"ou-parse-author\" />\r\n    <xsl:call-template name=\"ou-parse-date\" />\r\n    <xsl:call-template name=\"ou-parse-volume\" />\r\n    <xsl:call-template name=\"ou-parse-any\">\r\n      <xsl:with-param name=\"field_name\" select=\"string(\'isbn\')\" />\r\n    </xsl:call-template>\r\n    <xsl:call-template name=\"ou-parse-any\">\r\n      <xsl:with-param name=\"field_name\" select=\"string(\'issn\')\" />\r\n    </xsl:call-template>\r\n    <xsl:call-template name=\"ou-parse-any\">\r\n      <xsl:with-param name=\"field_name\" select=\"string(\'title\')\" />\r\n    </xsl:call-template>\r\n    <xsl:call-template name=\"ou-parse-any\">\r\n      <xsl:with-param name=\"field_name\" select=\"string(\'atitle\')\" />\r\n    </xsl:call-template>\r\n\r\n  </xsl:template>\r\n \r\n  <!-- parsing raw string data -->\r\n  \r\n  <xsl:template name=\"ou-parse-author\" >\r\n    <xsl:variable name=\"author\">\r\n      <xsl:call-template name=\"ou-author\" />\r\n    </xsl:variable>\r\n    \r\n    <xsl:variable name=\"aulast\" select=\"normalize-space(substring-before($author, \',\'))\"/>\r\n\r\n    <xsl:variable name=\"aufirst\" \r\n      select=\"substring-before( normalize-space(substring-after($author, \',\')), \' \')\"/>\r\n\r\n    <xsl:if test=\"$aulast != \'\'\">\r\n      <xsl:text>&amp;aulast=</xsl:text>\r\n      <xsl:value-of select=\"$aulast\" />\r\n    </xsl:if>\r\n\r\n    <xsl:if test=\"string-length( translate($aufirst, \'.\', \'\') ) &gt; 1\" >\r\n      <xsl:text>&amp;aufirst=</xsl:text>\r\n      <xsl:value-of select=\"$aufirst\" />\r\n    </xsl:if>\r\n\r\n  </xsl:template>\r\n\r\n  <xsl:template name=\"ou-parse-volume\">\r\n    <xsl:variable name=\"volume\">\r\n      <xsl:call-template name=\"ou-volume\" />\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"vol\" select=\"substring-after($volume, \'Vol\')\"/>\r\n    <xsl:variable name=\"issue\" select=\"false()\" />\r\n    <xsl:variable name=\"spage\" select=\"false()\" />\r\n\r\n    <xsl:if test=\"$vol\">\r\n      <xsl:text>&amp;volume=</xsl:text>\r\n      <xsl:value-of select=\"$vol\" />\r\n    </xsl:if>\r\n\r\n    <xsl:if test=\"$issue\">\r\n      <xsl:text>&amp;issue=</xsl:text>\r\n      <xsl:value-of select=\"$issue\" />\r\n    </xsl:if>\r\n    \r\n    <xsl:if test=\"$spage\">\r\n      <xsl:text>&amp;spage=</xsl:text>\r\n      <xsl:value-of select=\"$vol\" />\r\n    </xsl:if>\r\n\r\n  </xsl:template>\r\n\r\n\r\n  <xsl:template name=\"ou-parse-date\">\r\n    <xsl:variable name=\"date\">\r\n      <xsl:call-template name=\"ou-date\" />\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"parsed_date\" select=\"translate($date, \'.[]c;\', \'\')\"/>\r\n\r\n    <xsl:if test=\"$parsed_date\">\r\n      <xsl:text>&amp;date=</xsl:text>\r\n      <xsl:value-of select=\"$parsed_date\" />\r\n    </xsl:if>\r\n\r\n  </xsl:template>\r\n\r\n  \r\n  <xsl:template name=\"ou-parse-any\">\r\n    <xsl:param name=\"field_name\" />\r\n\r\n    <xsl:variable name=\"field_value\">\r\n      <xsl:choose>\r\n\r\n      <xsl:when test=\"$field_name = \'isbn\'\">\r\n        <xsl:call-template name=\"ou-isbn\"/>\r\n      </xsl:when>\r\n\r\n      <xsl:when test=\"$field_name = \'issn\'\">\r\n        <xsl:call-template name=\"ou-issn\"/>\r\n      </xsl:when>\r\n      \r\n      <xsl:when test=\"$field_name = \'atitle\'\">\r\n        <xsl:call-template name=\"ou-atitle\"/>\r\n      </xsl:when>\r\n     \r\n      <xsl:when test=\"$field_name = \'title\'\">\r\n        <xsl:call-template name=\"ou-title\"/>\r\n      </xsl:when>\r\n\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <xsl:variable name=\"digits\" select=\"1234567890\"/>\r\n\r\n    <xsl:variable name=\"parsed_value\">\r\n      <xsl:choose>\r\n\r\n      <xsl:when test=\"$field_name = \'isbn\'\">\r\n        <xsl:value-of select=\"translate($field_value, translate($field_value, concat($digits, \'X\'), \'\'), \'\')\"/>\r\n      </xsl:when>\r\n\r\n      <xsl:when test=\"$field_name = \'issn\'\">\r\n        <xsl:value-of select=\"translate($field_value, translate($field_value, concat($digits, \'-\', \'X\'), \'\'), \'\')\"/>\r\n      </xsl:when>\r\n      \r\n      <xsl:when test=\"$field_name = \'atitle\'\">\r\n        <xsl:value-of select=\"translate(normalize-space($field_value), \'.\', \'\')\"/>\r\n      </xsl:when>\r\n     \r\n      <xsl:when test=\"$field_name = \'title\'\">\r\n        <xsl:value-of select=\"translate(normalize-space($field_value), \'.\', \'\')\"/>\r\n      </xsl:when>\r\n\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n\r\n    <xsl:if test=\"$parsed_value != \'\'\">\r\n      <xsl:text>&amp;</xsl:text>\r\n      <xsl:value-of select=\"$field_name\" />\r\n      <xsl:text>=</xsl:text>\r\n      <xsl:value-of select=\"$parsed_value\" />\r\n    </xsl:if>\r\n\r\n  </xsl:template>\r\n\r\n\r\n<xsl:template name=\"ou-author\" >\r\n  <!-- what to do with multiple authors??-->\r\n    <xsl:for-each select=\"marc:datafield[@tag=\'100\' or @tag=\'700\']\">\r\n      <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n    </xsl:for-each>\r\n  </xsl:template>\r\n\r\n  <xsl:template name=\"ou-title\" >\r\n  <!-- if 773 exists its a journal/article -->\r\n    <xsl:choose>\r\n    \r\n      <xsl:when test=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'t\']\">\r\n        <xsl:value-of select=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'t\']\"/>\r\n      </xsl:when>\r\n\r\n      <xsl:when test=\"marc:datafield[@tag=\'245\']/marc:subfield[@code=\'a\']\">\r\n        <xsl:value-of select=\"marc:datafield[@tag=\'245\']/marc:subfield[@code=\'a\']\"/>\r\n      </xsl:when>\r\n\r\n    </xsl:choose>\r\n  </xsl:template>\r\n\r\n  \r\n  <xsl:template name=\"ou-atitle\" >\r\n    <!-- return value only if article or journal -->\r\n    <xsl:if test=\"marc:datafield[@tag=\'773\']\">\r\n      <xsl:value-of select=\"marc:datafield[@tag=\'245\']/marc:subfield[@code=\'a\']\"/>\r\n    </xsl:if>\r\n  </xsl:template>\r\n\r\n\r\n  <xsl:template name=\"ou-date\" >\r\n    <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\r\n      <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n    </xsl:for-each>\r\n  </xsl:template>\r\n\r\n  \r\n  <xsl:template name=\"ou-isbn\" >\r\n  <!-- if 773 exists its a journal/article -->\r\n    <xsl:choose>  \r\n    \r\n      <xsl:when test=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'z\']\">\r\n        <xsl:value-of select=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'z\']\"/>\r\n      </xsl:when>\r\n      \r\n      <xsl:when test=\"marc:datafield[@tag=\'020\']/marc:subfield[@code=\'a\']\">\r\n        <xsl:value-of select=\"marc:datafield[@tag=\'020\']/marc:subfield[@code=\'a\']\"/>\r\n      </xsl:when>\r\n\r\n    </xsl:choose>\r\n  </xsl:template>\r\n\r\n  \r\n  <xsl:template name=\"ou-issn\" >\r\n  <!-- if 773 exists its a journal/article -->\r\n    <xsl:choose>\r\n    \r\n      <xsl:when test=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'x\']\">\r\n        <xsl:value-of select=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'x\']\"/>\r\n      </xsl:when>\r\n\r\n      <xsl:when test=\"marc:datafield[@tag=\'022\']/marc:subfield[@code=\'a\']\">\r\n        <xsl:value-of select=\"marc:datafield[@tag=\'022\']/marc:subfield[@code=\'a\']\"/>\r\n      </xsl:when>\r\n\r\n      </xsl:choose>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"/\">\r\n    <pz:collection> \r\n      <xsl:apply-templates />\r\n    </pz:collection>\r\n  </xsl:template> 		       \r\n  \r\n  <xsl:template match=\"//delete\">\r\n	<xsl:copy-of select=\".\"/>                                                                                                                                                                               \r\n  </xsl:template> 		       \r\n  \r\n  <xsl:template match=\"//marc:record\">\r\n    <xsl:variable name=\"title_medium\" select=\"marc:datafield[@tag=\'245\']/marc:subfield[@code=\'h\']\"/>\r\n    <xsl:variable name=\"journal_title\" select=\"marc:datafield[@tag=\'773\']/marc:subfield[@code=\'t\']\"/>\r\n    <xsl:variable name=\"electronic_location_url\" select=\"marc:datafield[@tag=\'856\']/marc:subfield[@code=\'u\']\"/>\r\n    <xsl:variable name=\"fulltext_a\" select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'a\']\"/>\r\n    <xsl:variable name=\"fulltext_b\" select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'b\']\"/>\r\n    <xsl:variable name=\"medium\">\r\n      <xsl:choose>\r\n	<xsl:when test=\"$title_medium\">\r\n	  <xsl:value-of select=\"substring-after(substring-before($title_medium,\']\'),\'[\')\"/>\r\n	</xsl:when>\r\n	<xsl:when test=\"$fulltext_a\">\r\n	  <xsl:text>electronic resource</xsl:text>\r\n	</xsl:when>\r\n	<xsl:when test=\"$fulltext_b\">\r\n	  <xsl:text>electronic resource</xsl:text>\r\n	</xsl:when>\r\n	<xsl:when test=\"$journal_title\">\r\n	  <xsl:text>article</xsl:text>\r\n	</xsl:when>\r\n	<xsl:otherwise>\r\n	  <xsl:text>book</xsl:text>\r\n	</xsl:otherwise>\r\n      </xsl:choose>\r\n    </xsl:variable>\r\n\r\n    <pz:record>      \r\n      <xsl:for-each select=\"marc:controlfield[@tag=\'001\']\">\r\n        <pz:metadata type=\"id\">\r\n          <xsl:value-of select=\".\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'010\']\">\r\n        <pz:metadata type=\"lccn\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'020\']\">\r\n        <pz:metadata type=\"isbn\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'022\']\">\r\n        <pz:metadata type=\"issn\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'027\']\">\r\n        <pz:metadata type=\"tech-rep-nr\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'035\']\">\r\n        <pz:metadata type=\"system-control-nr\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'100\']\">\r\n	<pz:metadata type=\"author\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"author-title\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"author-date\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'110\']\">\r\n	<pz:metadata type=\"corporate-name\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"corporate-location\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"corporate-date\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'111\']\">\r\n	<pz:metadata type=\"meeting-name\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"meeting-location\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"meeting-date\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'d\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\r\n	<pz:metadata type=\"date\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'245\']\">\r\n        <pz:metadata type=\"title\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-remainder\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-responsibility\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-dates\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'f\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-medium\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'h\']\"/>\r\n        </pz:metadata>\r\n        <pz:metadata type=\"title-number-section\">\r\n          <xsl:value-of select=\"marc:subfield[@code=\'n\']\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'250\']\">\r\n	<pz:metadata type=\"edition\">\r\n	    <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'260\']\">\r\n        <pz:metadata type=\"publication-place\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n        <pz:metadata type=\"publication-name\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\r\n	</pz:metadata>\r\n        <pz:metadata type=\"publication-date\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'300\']\">\r\n	<pz:metadata type=\"physical-extent\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-format\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'b\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-dimensions\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'c\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-accomp\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'e\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-unittype\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'f\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-unitsize\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'g\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"physical-specified\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'3\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'440\']\">\r\n	<pz:metadata type=\"series-title\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag = \'500\' or @tag = \'505\' or\r\n      		@tag = \'518\' or @tag = \'520\' or @tag = \'522\']\">\r\n	<pz:metadata type=\"description\">\r\n            <xsl:value-of select=\"*/text()\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n      \r\n      <xsl:for-each select=\"marc:datafield[@tag=\'600\' or @tag=\'610\' or @tag=\'611\' or @tag=\'630\' or @tag=\'648\' or @tag=\'650\' or @tag=\'651\' or @tag=\'653\' or @tag=\'654\' or @tag=\'655\' or @tag=\'656\' or @tag=\'657\' or @tag=\'658\' or @tag=\'662\' or @tag=\'69X\']\">\r\n        <pz:metadata type=\"subject\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"subject-long\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text>, </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'856\']\">\r\n	<pz:metadata type=\"electronic-url\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'u\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"electronic-text\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'y\']\"/>\r\n	</pz:metadata>\r\n	<pz:metadata type=\"electronic-note\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'z\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'773\']\">\r\n        <pz:metadata type=\"citation\">\r\n          <xsl:for-each select=\"*\">\r\n            <xsl:value-of select=\"normalize-space(.)\"/>\r\n            <xsl:text> </xsl:text>\r\n          </xsl:for-each>\r\n        </pz:metadata>\r\n        <xsl:if test=\"marc:subfield[@code=\'t\']\">\r\n          <pz:metadata type=\"journal-title\">\r\n            <xsl:value-of select=\"marc:subfield[@code=\'t\']\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n        <xsl:if test=\"marc:subfield[@code=\'g\']\">\r\n          <pz:metadata type=\"journal-subpart\">\r\n            <xsl:value-of select=\"marc:subfield[@code=\'g\']\"/>\r\n          </pz:metadata>\r\n        </xsl:if>\r\n      </xsl:for-each>\r\n\r\n      <pz:metadata type=\"medium\">\r\n	<xsl:value-of select=\"$medium\"/>\r\n      </pz:metadata>\r\n      \r\n      <xsl:for-each select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'a\']\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- <xsl:if test=\"$fulltext_a\">\r\n	<pz:metadata type=\"fulltext\">\r\n	  <xsl:value-of select=\"$fulltext_a\"/>\r\n	</pz:metadata>\r\n      </xsl:if> -->\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'900\']/marc:subfield[@code=\'b\']\">\r\n        <pz:metadata type=\"fulltext\">\r\n          <xsl:value-of select=\".\"/>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <!-- <xsl:if test=\"$fulltext_b\">\r\n	<pz:metadata type=\"fulltext\">\r\n	  <xsl:value-of select=\"$fulltext_b\"/>\r\n	</pz:metadata>\r\n      </xsl:if> -->\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'907\' or @tag=\'901\']\">\r\n        <pz:metadata type=\"iii-id\">\r\n	  <xsl:value-of select=\"marc:subfield[@code=\'a\']\"/>\r\n	</pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'926\']\">\r\n        <pz:metadata type=\"holding\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text> </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'948\']\">\r\n        <pz:metadata type=\"holding\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text> </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:for-each select=\"marc:datafield[@tag=\'991\']\">\r\n        <pz:metadata type=\"holding\">\r\n	  <xsl:for-each select=\"marc:subfield\">\r\n	    <xsl:if test=\"position() > 1\">\r\n	      <xsl:text> </xsl:text>\r\n	    </xsl:if>\r\n	    <xsl:value-of select=\".\"/>\r\n	  </xsl:for-each>\r\n        </pz:metadata>\r\n      </xsl:for-each>\r\n\r\n      <xsl:if test=\"$open_url_resolver\">\r\n        <pz:metadata type=\"open-url\">\r\n            <xsl:call-template name=\"insert-md-openurl\" />\r\n        </pz:metadata>\r\n      </xsl:if>\r\n\r\n      <!--passthrough id data-->\r\n      <xsl:for-each select=\"pz:metadata\">\r\n          <xsl:copy-of select=\".\"/>\r\n      </xsl:for-each>\r\n\r\n    </pz:record>    \r\n  </xsl:template>\r\n\r\n  \r\n  <xsl:template match=\"text()\"/>\r\n\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4057,'BasicTransformationStep','<Description>',NULL,'Web Media type','<?xml version=\"1.0\"?>\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \r\n		xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\" \r\n		xmlns:tmarc=\"http://www.indexdata.com/turbomarc\">\r\n\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" />\r\n  <xsl:template  match=\"/\">\r\n    <pz:collection>\r\n      <xsl:apply-templates/>\r\n    </pz:collection>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:record\">\r\n    <pz:record>\r\n      <xsl:apply-templates/>\r\n    </pz:record>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'medium\']\">\r\n    <pz:metadata type=\'medium\'>web</pz:metadata>\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"pz:metadata\"> \r\n    <xsl:copy-of select=\".\" />\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"text()\" />\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4061,'BasicTransformationStep','<Description>',NULL,'Medium Normalization (PZ)','<?xml version=\"1.0\"?>\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \r\n		xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\" \r\n		xmlns:tmarc=\"http://www.indexdata.com/turbomarc\">\r\n\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" />\r\n  <xsl:template  match=\"/\">\r\n    <pz:collection>\r\n      <xsl:apply-templates/>\r\n    </pz:collection>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:record\">\r\n    <pz:record>\r\n      <xsl:apply-templates/>\r\n    </pz:record>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'medium\']\">\r\n    <pz:metadata type=\'medium\'>\r\n      <xsl:choose>\r\n        <xsl:when \r\n	   test=\". = \'article\' or . = \'audio-visual\' or . = \'article (electronic)\' or \r\n		 . = \'book\' or . = \'book (electronic)\' or \r\n		 . = \'electronicresource\' or . = \'electronic\' or\r\n		 . = \'journal (electronic)\' or . = \'journal\' or \r\n		 . = \'map (electronic)\' or . = \'map\' or \r\n		 . = \'microform\' or . = \'music-score\' or . = \'music-score (electronic)\' or \r\n		 . = \'newspaper\' or . = \'newspaper (electronic)\' or\r\n		 . = \'recording\' or . = \'recording (electronic)\' or . = \'recording-cd\' or . = \'recording-cassette\' or . = \'recording-vinyl\' or \r\n		 . = \'soundrecording\' or \r\n		 . = \'thesis (electronic)\' or . = \'thesis\' or\r\n		 . = \'video-dvd\' or . = \'video-vhs\' or . = \'video (electronic)\' or . = \'video\' or . = \'videorecording\' or . = \'video\' or . = \'video-blu-ray\'  or\r\n		 . = \'web\' or . = \'web (eletronic)\' or\r\n		 . = \'realia\' or . = \'picture\' or \r\n		 . = \'other\' \r\n		 \">\r\n          <xsl:value-of select=\".\"/>\r\n        </xsl:when>\r\n        <!-- Correct some typical differences -->\r\n        <xsl:when test=\". = \'sound recording(dc)\'\"> \r\n            <xsl:text>recording-cd</xsl:text>\r\n        </xsl:when>         \r\n        <xsl:when test=\". = \'videorecording(dvd)\'\">\r\n            <xsl:text>video-dvd</xsl:text>\r\n        </xsl:when>         \r\n        <xsl:when \r\n         test=\". = \'electronic resource\' or . = \'electronisk resours\' \" >\r\n          <xsl:text>electronicresource</xsl:text>\r\n        </xsl:when>\r\n        <xsl:otherwise>\r\n          <xsl:text>other</xsl:text>\r\n        </xsl:otherwise>\r\n      </xsl:choose>\r\n    </pz:metadata>\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"pz:metadata\"> \r\n    <xsl:copy-of select=\".\" />\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"text()\" />\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4153,'BasicTransformationStep','<Description>',NULL,'Subject Splitter','<?xml version=\"1.0\"?>\r\n<xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n\r\n>\r\n  <xsl:output indent=\"yes\" method=\"xml\"/>\r\n\r\n\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"/collection/pz:record/pz:metadata[@type=\'subject\']\">\r\n    <xsl:for-each select=\"tokenize(.,\'; *|-- *| - |\\. +|, *|\\)|\\(|\\.$\')\">\r\n      <xsl:if test=\"normalize-space(.) != \'\'\">\r\n        <metadata type=\"subject\">\r\n          <xsl:value-of select=\"normalize-space(.)\"/>\r\n        </metadata>\r\n      </xsl:if>\r\n    </xsl:for-each>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4159,'BasicTransformationStep','<Description>',NULL,'Author - Remove end date','<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \r\n   xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\r\n>\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'author\']\">\r\n    <xsl:variable name=\"author\" select=\"replace(string(.), \', [0-9]{4}\\-[0-9]{4}$\', \'\')\" />\r\n    <xsl:if test=\"$author and $author != \'\' \">\r\n      <pz:metadata type=\"author\">\r\n	<xsl:value-of select=\"$author\"/>\r\n      </pz:metadata>\r\n    </xsl:if>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4161,'BasicTransformationStep','<Description>',NULL,'Extract Subject level 1+2','<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\">\r\n  <xsl:output indent=\"yes\" method=\"xml\"/>\r\n\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'subject\']\">\r\n    <xsl:call-template name=\"output-tokens\">\r\n	      <xsl:with-param name=\"list\">\r\n		<xsl:value-of select=\".\"/>\r\n	      </xsl:with-param>\r\n    </xsl:call-template>\r\n  </xsl:template>\r\n\r\n  <!-- remove empty subject-long -->\r\n  <xsl:template match=\"pz:metadata[@type=\'subject-long\']\">\r\n    <xsl:if test=\". and . != \'\' \">\r\n      <pz:metadata type=\"subject-long\">\r\n	<xsl:value-of select=\".\"/>\r\n      </pz:metadata>\r\n    </xsl:if>\r\n  </xsl:template>\r\n\r\n  <xsl:template name=\"output-tokens\">\r\n    <xsl:param name=\"list\"/>\r\n    <xsl:variable name=\"newlist\" select=\"concat(normalize-space($list), \' -- \')\"/>\r\n    <xsl:variable name=\"first\" select=\"substring-before($newlist, \' -- \')\"/>\r\n    <xsl:variable name=\"remaining\" select=\"substring-after($newlist, \' -- \')\"/>\r\n    <xsl:variable name=\"second\" select=\"substring-before($remaining, \' -- \')\"/>\r\n\r\n    <xsl:if test=\"$first and $first != \'--\'\">\r\n      <pz:metadata type=\'subject\'>\r\n	<xsl:value-of select=\"$first\"/>\r\n	<xsl:if test=\"$second and $second != \'--\' \">\r\n	  <xsl:text> -- </xsl:text>\r\n	  <xsl:value-of select=\"$second\"/>\r\n	</xsl:if>\r\n      </pz:metadata>\r\n    </xsl:if>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4303,'BasicTransformationStep','<Description>',NULL,'Force media type - book (electronic)','<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \r\n   xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\r\n>\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'medium\']\">\r\n      <pz:metadata type=\"medium\">book (electronic)</pz:metadata>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4307,'BasicTransformationStep','<Description>',NULL,'Normalize Anonymous','<?xml version=\"1.0\"?>\r\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" \r\n		xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\" \r\n		xmlns:tmarc=\"http://www.indexdata.com/turbomarc\">\r\n\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" />\r\n  <xsl:template  match=\"/\">\r\n    <pz:collection>\r\n      <xsl:apply-templates/>\r\n    </pz:collection>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:record\">\r\n    <pz:record>\r\n      <xsl:apply-templates/>\r\n    </pz:record>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'author\']\">\r\n    <pz:metadata type=\'author\'>\r\n      <xsl:choose>\r\n        <xsl:when \r\n	   test=\". = \'ANON\'   or . = \'Anon\'   or . = \'anon\'   or \r\n		 . = \'ANON)\'  or . = \'Anon)\'  or . = \'anon)\'  or \r\n		 . = \'ANON.)\' or . = \'Anon.)\' or . = \'anon.)\' or\r\n                 . = \'ANON]\'  or . = \'Anon]\'  or . = \'anon]\'  or \r\n		 . = \'ANON.]\' or . = \'Anon.]\' or . = \'anon.]\' or \r\n		 . = \'Anon.,\' or . = \'anon). / anon\' or\r\n		 . = \'ANONYMOUS\' or . = \'anonymous\' or \r\n		 . = \'Anonymous (editor)\' or . = \'Anonymous Editor\' or \r\n		 . = \'anonymous]\' or . = \'Anonymous]\' or . = \'ANONYMOUS]\' or\r\n		 . = \'ANONYMOUS)\' or . = \'Anonymous)\' or  . = \'anonymous)\'  \r\n\r\n		 \">\r\n          <xsl:text>Anonymous</xsl:text>\r\n        </xsl:when>\r\n        <xsl:otherwise>\r\n          <xsl:value-of select=\".\"/>\r\n        </xsl:otherwise>\r\n      </xsl:choose>\r\n    </pz:metadata>\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"pz:metadata\"> \r\n    <xsl:copy-of select=\".\" />\r\n  </xsl:template>\r\n  \r\n  <xsl:template match=\"text()\" />\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4309,'BasicTransformationStep','<Description>',NULL,'Split Author by ;','<?xml version=\"1.0\"?>\r\n<xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n                xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\"\r\n                xmlns:tmarc=\"http://www.indexdata.com/turbomarc\">\r\n\r\n  <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\" />\r\n  <xsl:template  match=\"/\">\r\n    <pz:collection>\r\n      <xsl:apply-templates/>\r\n    </pz:collection>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:record\">\r\n    <pz:record>\r\n      <xsl:apply-templates/>\r\n    </pz:record>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'author\']\">\r\n      <xsl:for-each select=\"tokenize(.,\';\')\">\r\n        <pz:metadata type=\"author\"><xsl:value-of select=\"normalize-space(.)\" /></pz:metadata>\r\n      </xsl:for-each>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata\">\r\n    <xsl:copy-of select=\".\" />\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"text()\" />\r\n</xsl:stylesheet>',NULL,NULL,NULL,NULL,NULL),(4403,'BasicTransformationStep','<Description>',NULL,'Remove ending punctuation','<?xml version=\"1.0\"?>\r\n<xsl:stylesheet version=\"2.0\" \r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n  xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\" >\r\n  <xsl:output indent=\"yes\" method=\"xml\"/>\r\n\r\n\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'subject\']/text()\">\r\n    <xsl:call-template name=\"remove-characters-last\">\r\n      <xsl:with-param  name=\"input\" select=\".\" />\r\n      <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\r\n    </xsl:call-template>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:metadata[@type=\'author\']/text()\">\r\n    <xsl:call-template name=\"remove-characters-last\">\r\n      <xsl:with-param  name=\"input\" select=\".\" />\r\n      <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\r\n    </xsl:call-template>\r\n  </xsl:template>\r\n\r\n\r\n  <xsl:template name=\"remove-characters-last\">\r\n    <xsl:param name=\"input\" />\r\n    <xsl:param name=\"characters\"/>\r\n    <xsl:variable name=\"lastcharacter\" select=\"substring($input,string-length($input))\" />\r\n    <xsl:choose>\r\n      <xsl:when test=\"$characters and $lastcharacter and contains($characters, $lastcharacter)\">\r\n        <xsl:call-template name=\"remove-characters-last\">\r\n          <xsl:with-param  name=\"input\" select=\"substring($input,1, string-length($input)-1)\" />\r\n          <xsl:with-param  name=\"characters\" select=\"$characters\" />\r\n        </xsl:call-template>\r\n      </xsl:when>\r\n      <xsl:otherwise>\r\n        <xsl:value-of select=\"$input\"/>\r\n      </xsl:otherwise>\r\n    </xsl:choose>\r\n  </xsl:template>\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4555,'BasicTransformationStep','<Description>',NULL,'Create ID if missing','<xsl:stylesheet version=\"2.0\" \r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n  xmlns:pz=\"http://www.indexdata.com/pazpar2/1.0\" >\r\n  <xsl:output indent=\"yes\" method=\"xml\"/>\r\n\r\n  <xsl:template match=\"@* | node()\">\r\n    <xsl:copy>\r\n      <xsl:apply-templates select=\"@* | node()\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"pz:record\"> \r\n    <pz:record>\r\n      <xsl:if test=\"not(pz:metadata[@type=\'id\'])\">\r\n        <pz:metadata type=\"id\">\r\n          <xsl:value-of select=\"pz:metadata[@type=\'author\']\" />\r\n          <xsl:text> - </xsl:text>\r\n          <xsl:value-of select=\"pz:metadata[@type=\'title\']\" />\r\n          <xsl:text> - </xsl:text>\r\n          <xsl:value-of select=\"pz:metadata[@type=\'date\']\" />\r\n        </pz:metadata>\r\n        <xsl:apply-templates />\r\n      </xsl:if>\r\n      <xsl:if test=\"pz:metadata[@type=\'id\']\">\r\n        <xsl:apply-templates />\r\n      </xsl:if>\r\n    </pz:record>\r\n  </xsl:template>\r\n\r\n</xsl:stylesheet>\r\n',NULL,NULL,NULL,NULL,NULL),(4702,'BasicTransformationStep','Delete Me Later',NULL,'DUMMY STEP','PZ','PZ','XSLT','PZ','',''),(4703,'BasicTransformationStep','adsda',NULL,'DUMMY STEP 2','','PZ','XSLT','PZ','',''),(4753,'BasicTransformationStep','Test',NULL,'New Step 1','addad','Test','XSL','Test','',''),(4754,'BasicTransformationStep','Test',NULL,'New Step 2','asdasda','PZ','XSL','PZ','','');
/*!40000 ALTER TABLE `STEP` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `STORAGE`
--

DROP TABLE IF EXISTS `STORAGE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `STORAGE` (
  `ID` bigint(20) NOT NULL,
  `DTYPE` varchar(31) DEFAULT NULL,
  `ENABLED` tinyint(1) DEFAULT '0',
  `CURRENTSTATUS` varchar(4096) DEFAULT NULL,
  `NAME` varchar(255) DEFAULT NULL,
  `MESSAGE` varchar(4096) DEFAULT NULL,
  `TRANSFORMATION` varchar(100) DEFAULT NULL,
  `DESCRIPTION` varchar(4096) DEFAULT NULL,
  `URL` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `STORAGE`
--

LOCK TABLES `STORAGE` WRITE;
/*!40000 ALTER TABLE `STORAGE` DISABLE KEYS */;
INSERT INTO `STORAGE` VALUES (102,'SolrStorageEntity',1,'TODO','Solr (tomcat) @ lui-dev',NULL,NULL,'Solr in Tomcat at lui-dev','http://lui-dev.indexdata.com/solr/'),(1511,'SolrStorageEntity',1,'TODO','Solr (tomcat) @ donut',NULL,NULL,'Solr running in tomcat on donut','http://donut.indexdata.com:8080/solr');
/*!40000 ALTER TABLE `STORAGE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TRANSFORMATION`
--

DROP TABLE IF EXISTS `TRANSFORMATION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `TRANSFORMATION` (
  `ID` bigint(20) NOT NULL,
  `DTYPE` varchar(31) DEFAULT NULL,
  `DESCRIPTION` varchar(4096) DEFAULT NULL,
  `ENABLED` tinyint(1) DEFAULT '0',
  `NAME` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TRANSFORMATION`
--

LOCK TABLES `TRANSFORMATION` WRITE;
/*!40000 ALTER TABLE `TRANSFORMATION` DISABLE KEYS */;
INSERT INTO `TRANSFORMATION` VALUES (10,'BasicTransformation','Converting from OAI-PMH(DC) to PZ',1,'OAI-PMH(DC) to PZ'),(20,'BasicTransformation','Converting from OAI-PMH(MARCXML) to PZ',1,'OAI-PMH(MARCXML) to PZ'),(2952,'BasicTransformation','',0,'Marc XML'),(2953,'BasicTransformation','Last step fixes a missing ID. This step is very slow and should only be used when really needed. ',1,'Marc XML with identifier fix'),(2954,'BasicTransformation','Converts from Turbo Marc XML to PZ. Creating the ID is slow, so only use when needed.',1,'Turbo Marc with identifier fix'),(3102,'BasicTransformation','Gutenberg to MARC21, MARC21 to PZ2, Subject split (retain level 1 and 2). Clean out empty subject-longs',1,'Gutenberg (Subject level 1 and 2)'),(3103,'BasicTransformation','',1,'DC to MARC21 (slim)'),(3603,'BasicTransformation','',1,'Wikipedia Abstract 2 PZ'),(4002,'BasicTransformation','Marc XML 2 PZ',1,'Marc XML 2 PZ (full)'),(4202,'BasicTransformation','',1,'Gutenberg (PZ)'),(4752,'BasicTransformation','Tesda',0,'New Test'),(4852,'BasicTransformation','adsad',0,'Dummy 1'),(5052,'BasicTransformation','Turbo MARC to PZ, Media normalization and remove ending punctuation',1,'Turbo MARC');
/*!40000 ALTER TABLE `TRANSFORMATION` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TRANSFORMATION_STEP`
--

DROP TABLE IF EXISTS `TRANSFORMATION_STEP`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `TRANSFORMATION_STEP` (
  `ID` bigint(20) NOT NULL,
  `DTYPE` varchar(31) DEFAULT NULL,
  `POSITION` int(11) DEFAULT NULL,
  `TRANSFORMATION_ID` bigint(20) DEFAULT NULL,
  `STEP_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `UNQ_TRANSFORMATION_STEP_0` (`TRANSFORMATION_ID`,`STEP_ID`),
  KEY `FK_TRANSFORMATION_STEP_STEP_ID` (`STEP_ID`),
  CONSTRAINT `FK_TRANSFORMATION_STEP_STEP_ID` FOREIGN KEY (`STEP_ID`) REFERENCES `STEP` (`ID`),
  CONSTRAINT `FK_TRANSFORMATION_STEP_TRANSFORMATION_ID` FOREIGN KEY (`TRANSFORMATION_ID`) REFERENCES `TRANSFORMATION` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TRANSFORMATION_STEP`
--

LOCK TABLES `TRANSFORMATION_STEP` WRITE;
/*!40000 ALTER TABLE `TRANSFORMATION_STEP` DISABLE KEYS */;
INSERT INTO `TRANSFORMATION_STEP` VALUES (1,'TransformationStepAssociation',1,10,10),(2,'TransformationStepAssociation',1,20,20),(3,'TransformationStepAssociation',2,20,22),(3002,'TransformationStepAssociation',1,2953,22),(3004,'TransformationStepAssociation',1,2954,3005),(3152,'TransformationStepAssociation',1,3102,3153),(3154,'TransformationStepAssociation',1,3103,3155),(3352,'TransformationStepAssociation',2,3102,22),(3652,'TransformationStepAssociation',1,3603,3653),(4052,'TransformationStepAssociation',1,4002,4053),(4054,'TransformationStepAssociation',2,10,4061),(4056,'TransformationStepAssociation',2,3603,4057),(4058,'TransformationStepAssociation',3,20,4061),(4060,'TransformationStepAssociation',2,2953,4061),(4156,'TransformationStepAssociation',3,3102,4161),(4158,'TransformationStepAssociation',4,3102,4159),(4160,'TransformationStepAssociation',1,4202,4161),(4302,'TransformationStepAssociation',2,4202,4303),(4304,'TransformationStepAssociation',3,4202,4307),(4306,'TransformationStepAssociation',3,2953,4307),(4308,'TransformationStepAssociation',4,2953,4309),(4352,'TransformationStepAssociation',2,2954,4061),(4402,'TransformationStepAssociation',5,2953,4403),(4404,'TransformationStepAssociation',3,2954,4403),(4552,'TransformationStepAssociation',4,2954,4555),(4554,'TransformationStepAssociation',6,2953,4555),(4652,'TransformationStepAssociation',1,2952,22),(4653,'TransformationStepAssociation',2,2952,4061),(4654,'TransformationStepAssociation',3,2952,4161),(4805,'TransformationStepAssociation',1,4752,4753),(4902,'TransformationStepAssociation',1,4852,22),(4903,'TransformationStepAssociation',2,4852,4702),(4904,'TransformationStepAssociation',3,4852,4703),(4906,'TransformationStepAssociation',5,4852,4309),(4907,'TransformationStepAssociation',5,4852,4153),(4952,'TransformationStepAssociation',3,4752,4702),(4953,'TransformationStepAssociation',4,4752,4703),(4955,'TransformationStepAssociation',5,4752,4754),(5102,'TransformationStepAssociation',1,5052,3005),(5103,'TransformationStepAssociation',2,5052,4061),(5104,'TransformationStepAssociation',3,5052,4403);
/*!40000 ALTER TABLE `TRANSFORMATION_STEP` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2013-01-31 19:07:00
