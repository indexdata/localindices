---
- hosts: default

  vars:
    mysql_root_password: id3636mysql
    tomcat_admin:
      user: admin
      password: tc3636
    mysql_credentials:
      user: localidxadm
      password: localidxadmpass

  tasks:
    - name: Clone lui-solr repo into development tree
      connection: local
      git: repo=ssh://git.indexdata.com:222/home/git/pub/lui-solr dest=./lui-solr

    - name: Update apt-cache
      become: yes
      apt: update-cache=yes
      
    - name: Install dependencies from apt
      become: yes
      apt: name={{ item }} state=present
      with_items:
        - openjdk-7-jdk
        - tomcat8
        - tomcat8-admin
        - mysql-server
        - python-mysqldb
        - maven 

    - name: Create tomcat administrative user
      become: yes
      lineinfile: dest=/etc/tomcat8/tomcat-users.xml insertbefore="</tomcat-users>" line={{ item }}
      with_items:
        - '  <role rolename="manager-gui"/>'
        - '  <user username="{{ tomcat_admin.user }}" password="{{ tomcat_admin.password }}" roles="manager-gui"/>'
      notify: Restart Tomcat

    - name: Create deployment environment
      become: yes
      file: path={{ item }} state=directory
      with_items:
        - /usr/share/masterkey/lui/solr4/war
        - /usr/share/masterkey/lui/solr4/master/collection1
        - /var/lib/masterkey/lui/solr4/master
        - /var/log/masterkey/harvester
        - /etc/masterkey/harvester

    - name: Update permissions on deployment directories
      become: yes
      file: path={{ item }} owner=tomcat8
      with_items:
        - /var/lib/masterkey/lui/solr4/master
        - /var/log/masterkey/harvester

    - name: Link Solr prerequisites
      become: yes
      file: src=/vagrant/lui-solr/lib/{{ item }} path=/usr/share/tomcat8/lib/{{ item }} state=link
      with_items:
        - jcl-over-slf4j-1.6.6.jar
        - jul-to-slf4j-1.6.6.jar
        - log4j-1.2.16.jar
        - log4j.properties
        - slf4j-api-1.6.6.jar
        - slf4j-log4j12-1.6.6.jar

    - name: Link Solr configuration
      become: yes
      file: src=/vagrant/lui-solr/conf path=/usr/share/masterkey/lui/solr4/master/collection1/conf state=link

    - name: Link solrconfig.xml
      become: yes
      file: src=/vagrant/lui-solr/conf/solrconfig-master.xml dest=/vagrant/lui-solr/conf/solrconfig.xml state=link

    - name: Link Solr binary
      become: yes
      file: src=/vagrant/lui-solr/dist/solr-4.9.1.war path=/usr/share/masterkey/lui/solr4/war/solr.war state=link

    - name: Deploy Tomcat context fragment for Solr
      become: yes
      file: src=/vagrant/lui-solr/etc/solr4-tomcat-context-master.xml path=/etc/tomcat8/Catalina/localhost/solr4.xml state=link
      notify: Restart Tomcat

    - name: Update MySQL root password
      become: yes
      mysql_user: name=root password={{ mysql_root_password }}

    - name: Update my.cnf
      become: yes
      copy:
        dest: /root/.my.cnf
        mode: 0600
        content: |
          [client]
          user=root
          password={{ mysql_root_password }}

    - name: Create localindices database
      become: yes
      mysql_db: name=localindices state=present

    - name: Create the mysql user
      become: yes
      mysql_user: name={{ mysql_credentials.user }} password={{ mysql_credentials.password }} priv="localindices.*:all" append_privs=yes state=present

    # These tasks are not idempotent - they will zap all tables in the database

    # The "right way" - initialize the database, load alter scripts on top
    # Unfortunately, it fails
    # - name: Initialize the database
    #   become: yes
    #   mysql_db: name=localindices state=import target=/vagrant/sql/localindices.sql

    # - name: Collect the db alterations
    #   shell: "find /vagrant/sql/v*.* -name \"????-??-??.sql\" -print"
    #   register: db_alter

    # - name: Run the alteration scripts
    #   become: yes
    #   mysql_db: name=localindices state=import target={{ item }}
    #   with_items: "{{ db_alter.stdout_lines }}"

    # The "wrong way" - load a database from production
    # - name: Initialize the database
    #   become: yes
    #   mysql_db: name=localindices state=import target=/vagrant/sql/samples/localindices-katsu--2016-05-01_06-00-01.sql
    # Which didn't work, either.

    # Loading new schema 2.8-2.9
    - name: Initialize the database
      become: yes
      mysql_db: name=localindices state=import target=/vagrant/sql/schema.v2.8-with-sample-data.sql
      notify: Restart Tomcat

    - name: Load 2.9 table alteration
      become: yes
      mysql_db: name=localindices state=import target=/vagrant/sql/v2.9/2016-05-03.sql
      notify: Restart Tomcat

    - name: Build Harvester and Harvester Admin web apps
      shell: mvn install > mvn-install.log creates=/vagrant/mvn-install.log chdir=/vagrant/
      notify: Restart Tomcat

    - name: Link Harvester web app
      become: yes
      file: src=/vagrant/harvester/target/harvester path=/usr/share/masterkey/harvester state=link

    - name: Link Harvester configuration
      become: yes
      file: src=/vagrant/harvester/target/harvester/WEB-INF/harvester.properties path=/etc/masterkey/harvester/harvester.properties state=link

    - name: Link Harvester stylesheets
      become: yes
      file: src=/vagrant/harvester/target/harvester/WEB-INF/stylesheets/{{ item }} path=/var/lib/tomcat8/{{ item }} state=link
      with_items:
        - ARTstor-electronic-url-fix.xsl
        - addmergekey.xsl
        - addsnippet.xsl
        - creator-filter-date-2.0.xsl
        - dc-lexis.xsl
        - marc21.xsl
        - oai2marc.xsl
        - oai_dc.xsl
        - oaipmh-dc_pazpar2-minimal.xsl
        - pz-author-remove-end-date.xsl
        - pz-subject-split.xsl
        - pz2-ourl-base.xsl
        - pz2-ourl-marc21.xsl
        - pz2-solr-split-1.0.xsl
        - pz2-solr-split-2-levels.xsl
        - pz2-solr.xsl
        - pz2index.xsl
        - snippet2pz.xsl
        - solr-subject-split.xsl

    - name: Create Harvester cache directory
      become: yes
      file: path=/var/cache/harvester owner=tomcat8 group=adm state=directory

    - name: Provide access to Harvester test data
      become: yes
      lineinfile: dest=/etc/tomcat8/server.xml line="\t<Context docBase=\"/vagrant/harvester/test\" path=\"/test\" />" insertbefore="</Host>"
      notify: Restart Tomcat

    - name: Deploy Tomcat context fragment for Harvester
      become: yes
      file: src=/vagrant/etc/harvester-context.xml path=/etc/tomcat8/Catalina/localhost/harvester.xml state=link
      notify: Restart Tomcat

    - name: Link Harvester Admin web app
      become: yes
      file: src=/vagrant/harvester-admin/target/harvester-admin path=/usr/share/masterkey/harvester-admin state=link
      notify: Restart Tomcat

    - name: Deploy Tomcat context fragment for Harvester Admin
      become: yes
      file: src=/vagrant/etc/harvester-admin-context.xml path=/etc/tomcat8/Catalina/localhost/harvester-admin.xml state=link

  handlers:
    - name: Restart Tomcat
      become: yes
      service: name=tomcat8 state=restarted
